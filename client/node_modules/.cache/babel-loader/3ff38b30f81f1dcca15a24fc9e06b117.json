{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\create\\\\CreateTest.js\";\nimport React, { useState } from 'react';\nimport API from '../../BackendAPI';\nimport { UploadIcon } from '@primer/octicons-react';\nexport default function CreateTest(props) {\n  const permission = props.permission;\n  const [item, setItem] = useState(null);\n  const [formNum, setFormNum] = useState(null);\n  const [examName, setExamName] = useState(null);\n  const [comment, setComment] = useState(null);\n  const [examDoc, setExamDoc] = useState(null);\n  const [result, setResult] = useState(null);\n  const [items, setItems] = useState(['távirányító', 'szekrény', 'telefontok']);\n\n  function handleChange(event) {\n    switch (event.target.name) {\n      case 'item':\n        setItem(event.target.value);\n        break;\n\n      case 'examName':\n        setExamName(event.target.value);\n        break;\n\n      case 'comment':\n        setComment(event.target.value);\n        break;\n\n      case 'examDoc':\n        setExamDoc(event.target.files[0]);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (permission !== 'admin') {\n      setResult('Parancs megtagadva! Nincs megfelelő jogosultsága!');\n      return;\n    }\n\n    if (examDoc == null) {\n      setResult('A fájl feltöltése kötelező!');\n      return;\n    }\n\n    if (item == null || formNum == null || examName == null) {\n      setResult('Legalább egy kötelező mező üresen maradt!');\n      return;\n    }\n\n    const data = new FormData();\n    data.append('item', item);\n    data.append('examName', examName);\n    data.append('comment', comment);\n    data.append('examDoc', examDoc);\n    setResult(null);\n    API.post('/exams/upload', data, {\n      headers: {\n        'Content-Type': `multipart/form-data; boundary=${data._boundary}`\n      }\n    }).then(res => {\n      switch (res.data.result) {\n        case 'invalid_file_type':\n          setResult('A fájl kiterjesztése nem PDF!');\n          break;\n\n        case 200:\n          setResult('A vizsga felvétele sikeres volt!');\n          break;\n\n        case 'invalid_file_size':\n          setResult('A fájl mérete meghaladta a maximális méretet! (2 Mb)');\n          break;\n\n        case 'mysql_form_exists_error':\n          setResult('A vizsga felvétele nem sikerült, mivel a megadott formalapszámhoz már hozzárendeltek egy vizsgát!');\n          break;\n\n        case 'mysql_item_exists_error':\n          setResult('A vizsga felvétele nem sikerült, mivel a megadott termékkódhoz már hozzárendeltek egy vizsgát!');\n          break;\n\n        case 'mysql_name_exists_error':\n          setResult('A vizsga felvétele nem sikerült, mivel ilyen névvel már létezik vizsga');\n          break;\n\n        case 'mysql_invalid_itemcode':\n          setResult('A vizsga felvétele nem sikerült, mivel ilyen termékkód nem létezik!');\n          break;\n\n        default:\n          setResult(null);\n          return;\n      }\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container shadow rounded p-3 bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 45\n    }\n  }, \"\\xDAj vizsga felt\\xF6lt\\xE9se:\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container text-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"rounded pl-2 w-25\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, \"A vizsga term\\xE9ke\"), items.map((elem, index) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, elem);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"examName\",\n    onChange: handleChange,\n    value: examName || '',\n    required: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"examName\",\n    className: \"label-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, \"A vizsga megnevez\\xE9se:\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"comment\",\n    onChange: handleChange,\n    value: comment || '',\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"comment\",\n    className: \"label-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, \"Megjegyz\\xE9s:\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mx-auto mb-2 mt-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    id: \"pdfFel\",\n    name: \"examDoc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-warning\",\n    value: \"L\\xE9trehoz\\xE1s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"Felt\\xF6lt\\xE9s!\"))), result ? /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"alert alert-secondary mt-3 text-center\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 23\n    }\n  }, result) : /*#__PURE__*/React.createElement(React.Fragment, null));\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/create/CreateTest.js"],"names":["React","useState","API","UploadIcon","CreateTest","props","permission","item","setItem","formNum","setFormNum","examName","setExamName","comment","setComment","examDoc","setExamDoc","result","setResult","items","setItems","handleChange","event","target","name","value","files","handleSubmit","preventDefault","data","FormData","append","post","headers","_boundary","then","res","catch","err","console","log","map","elem","index"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport API from '../../BackendAPI'\r\nimport { UploadIcon } from '@primer/octicons-react';\r\n\r\nexport default function CreateTest(props){\r\n\r\n    const permission = props.permission\r\n\r\n    const [item, setItem] = useState(null)\r\n    const [formNum, setFormNum] = useState(null)\r\n    const [examName, setExamName] = useState(null)\r\n    const [comment, setComment] = useState(null)\r\n    const [examDoc, setExamDoc] = useState(null)\r\n    const [result, setResult] = useState(null)\r\n    const [items, setItems] = useState(['távirányító', 'szekrény', 'telefontok'])\r\n    \r\n\r\n    function handleChange(event){\r\n        switch(event.target.name){\r\n            case 'item':\r\n                setItem(event.target.value)\r\n                break\r\n            case 'examName':\r\n                setExamName(event.target.value)\r\n                break\r\n            case 'comment':\r\n                setComment(event.target.value)\r\n                break\r\n            case 'examDoc':\r\n                setExamDoc(event.target.files[0])\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault()\r\n\r\n        if(permission !== 'admin'){\r\n            setResult('Parancs megtagadva! Nincs megfelelő jogosultsága!')\r\n            return\r\n        }\r\n\r\n        if(examDoc == null){\r\n            setResult('A fájl feltöltése kötelező!')\r\n            return\r\n        }\r\n        if(item == null || formNum == null || examName == null){\r\n            setResult('Legalább egy kötelező mező üresen maradt!')\r\n            return\r\n        }\r\n\r\n        const data = new FormData()\r\n        data.append('item', item)\r\n        data.append('examName', examName)\r\n        data.append('comment', comment)\r\n        data.append('examDoc', examDoc)\r\n\r\n        setResult(null)\r\n        API.post('/exams/upload', data, {headers: {'Content-Type': `multipart/form-data; boundary=${data._boundary}`}})\r\n            .then(res => {\r\n                switch(res.data.result){\r\n                    case 'invalid_file_type':\r\n                        setResult('A fájl kiterjesztése nem PDF!')\r\n                        break\r\n                    case 200:\r\n                        setResult('A vizsga felvétele sikeres volt!')\r\n                        break\r\n                    case 'invalid_file_size':\r\n                        setResult('A fájl mérete meghaladta a maximális méretet! (2 Mb)')\r\n                        break\r\n                    case 'mysql_form_exists_error':\r\n                        setResult('A vizsga felvétele nem sikerült, mivel a megadott formalapszámhoz már hozzárendeltek egy vizsgát!')\r\n                        break\r\n                    case 'mysql_item_exists_error':\r\n                        setResult('A vizsga felvétele nem sikerült, mivel a megadott termékkódhoz már hozzárendeltek egy vizsgát!')\r\n                        break\r\n                    case 'mysql_name_exists_error':\r\n                        setResult('A vizsga felvétele nem sikerült, mivel ilyen névvel már létezik vizsga')\r\n                        break\r\n                    case 'mysql_invalid_itemcode':\r\n                        setResult('A vizsga felvétele nem sikerült, mivel ilyen termékkód nem létezik!')\r\n                        break\r\n                    default:\r\n                        setResult(null)\r\n                        return\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container shadow rounded p-3 bg-light\">\r\n            <h1 className=\"text-center m-3\"><p>Új vizsga feltöltése:</p></h1>\r\n            <form onSubmit={handleSubmit}>\r\n                {/*<div className=\"form-group m-auto\">\r\n                    <input type=\"text\" name=\"item\" onChange={handleChange} value={item || ''} required autoComplete=\"off\"/>\r\n                    <label htmlFor=\"item\" className=\"label-name\">\r\n                        <span className=\"content-name\">\r\n                            A vizsga terméke:\r\n                        </span>\r\n                    </label>\r\n                </div>*/}\r\n                \r\n                <div className=\"container text-center mb-2\">\r\n                    <select className=\"rounded pl-2 w-25\">\r\n                        <option selected>A vizsga terméke</option>\r\n                        {items.map((elem, index) =>{\r\n                            return(\r\n                                <option value={index}>{elem}</option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                \r\n                <div className=\"form-group m-auto\">\r\n                    <input type=\"text\" name=\"examName\" onChange={handleChange} value={examName || ''} required autoComplete=\"off\"/>\r\n                    <label htmlFor=\"examName\" className=\"label-name\">\r\n                        <span className=\"content-name\">\r\n                            A vizsga megnevezése:\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"form-group m-auto\">\r\n                    <input type=\"text\" name=\"comment\" onChange={handleChange} value={comment || ''} autoComplete=\"off\"/>\r\n                    <label htmlFor=\"comment\" className=\"label-name\">\r\n                        <span className=\"content-name\">\r\n                            Megjegyzés:\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"container mx-auto mb-2 mt-3 text-center\">\r\n                    <input type=\"file\" onChange={handleChange} id=\"pdfFel\" name=\"examDoc\"/>\r\n                    {/*<label htmlFor=\"pdfFel\" className=\"btn btn-outline-primary rounded\">\r\n                        <i>\r\n                            <UploadIcon size={24} />\r\n                            &nbsp;\r\n                        </i>\r\n                        Válassza ki a feltöltendő fájlt!\r\n                    </label>*/}\r\n                </div>\r\n                <div className=\"container text-center\">\r\n                    <button type=\"submit\" className=\"btn btn-warning\" value=\"Létrehozás\">Feltöltés!</button>\r\n                </div>\r\n            </form>\r\n            {result ? <h3 className=\"alert alert-secondary mt-3 text-center\" role=\"alert\">{result}</h3> : <></>}\r\n        </div>\r\n    )\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}