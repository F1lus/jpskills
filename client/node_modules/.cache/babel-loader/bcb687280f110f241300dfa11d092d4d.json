{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\modify\\\\ExamModify.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Redirect } from 'react-router-dom';\nimport ListManager from './ListManager';\nimport ModalElement from './ModifyPdf';\nimport manager from '../../GlobalSocket';\nimport API from '../../BackendAPI';\nimport AddQuestion from './AddQuestion';\nexport default function ExamModify(props) {\n  const examCode = useParams();\n  const socket = new manager().socket;\n  const [warning, setWarning] = useState(null);\n  const [examProps, setExamProps] = useState([]);\n  const [status, setStatus] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [maxPoints, setMaxPoints] = useState(0);\n  const [displayQuestion, setDisplayQuestion] = useState(false);\n  const [updater, setUpdater] = useState(0);\n  const [removed, setRemoved] = useState(false);\n  useEffect(() => {\n    socket.emit('request-exam-content', examCode.examName);\n    socket.on('exam-content', (examName, questionList, notes, status, points) => {\n      let list = [];\n      let examPoints = 0;\n      setQuestions([]);\n      questionList.forEach(question => {\n        let answers = [];\n\n        if (question.answers) {\n          question.answers.forEach(answer => {\n            answers.push([answer.id, answer.text, answer.correct]);\n          });\n          answers.sort((a, b) => a[0] - b[0]);\n        }\n\n        examPoints += question.points;\n        list.push([question.id, question.name, question.points, answers]);\n      });\n      list.sort((a, b) => a[0] - b[0]);\n      setQuestions(list);\n      setStatus(status);\n      setMaxPoints(examPoints);\n      setExamProps([examName, notes === 'null' ? '' : notes, status, points]);\n    });\n    socket.on('exam-content-no-question', (examName, notes, status, points) => {\n      setQuestions([]);\n      setWarning('Nincsenek megjeleníthető kérdések.');\n      setStatus(status);\n\n      if (points > 0) {\n        points = 0;\n        socket.emit('examPoints-mislead', examCode.examName);\n      }\n\n      setMaxPoints(points);\n      setExamProps([examName, notes === 'null' ? '' : notes, status, points]);\n    });\n    return () => socket.disconnect(); // eslint-disable-next-line\n  }, [updater, examCode.examName]);\n  useEffect(() => {\n    socket.on('server-accept', () => {\n      setUpdater(count => ++count);\n    });\n    socket.on('removed-exam', () => {\n      socket.emit('get-products');\n      socket.emit('exams-get-signal');\n      setRemoved(true);\n    });\n  });\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (examProps != null) {\n      API.post(`/exams/modify/${examCode.examName}`, {\n        examName: examProps[0],\n        notes: examProps[1],\n        points: examProps[3]\n      }).then(response => {\n        if (response.data.updated) {\n          socket.emit('exam-modified');\n        }\n      }).catch(err => console.log(err));\n    }\n  }\n\n  function statusChange(event) {\n    event.preventDefault();\n\n    if (examProps[3] != null) {\n      API.post(`/exams/modify/${examCode.examName}`, {\n        status: examProps[3]\n      }).then(response => {\n        if (response.data.updated) {\n          socket.emit('exam-modified');\n        }\n      }).catch(err => console.log(err));\n    }\n  }\n\n  function handleChange(event) {\n    const list = examProps.slice();\n\n    switch (event.target.name) {\n      case 'examName':\n        list[0] = event.target.value;\n        setExamProps(list);\n        break;\n\n      case 'examNotes':\n        list[1] = event.target.value;\n        setExamProps(list);\n        break;\n\n      case 'examStatus':\n        if (event.target.value === 'Állapotváltás...') {\n          break;\n        }\n\n        list[2] = event.target.value;\n        setExamProps(list);\n        break;\n\n      case 'examMinPoints':\n        if (event.target.value > maxPoints) {\n          list[3] = maxPoints;\n        } else if (event.target.value < 0) {\n          list[3] = 0;\n        } else {\n          list[3] = event.target.value;\n        }\n\n        setExamProps(list);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function setDisplay(event) {\n    event.preventDefault();\n    setDisplayQuestion(display => !display);\n  }\n\n  function removeExam(event) {\n    event.preventDefault();\n    socket.emit('remove-test', examCode.examName);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container text-center mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, removed ? /*#__PURE__*/React.createElement(Redirect, {\n    from: `/exams/modify/${examCode.examName}`,\n    to: \"/exams\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 24\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container text-center rounded w-75 mb-5 p-3 shadow bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, \"A vizsga jellemz\\u0151i:\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"examName\",\n    value: examProps[0] || '',\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"examName\",\n    className: \"label-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, \"A vizsga neve\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"examNotes\",\n    value: examProps[1] || '',\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"examNotes\",\n    className: \"label-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }, \"A vizsga megjegyz\\xE9se\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"examMinPoints\",\n    value: examProps[3] || 0,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"examMinPoints\",\n    className: \"label-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }, \"A vizsga elv\\xE9gz\\xE9s\\xE9hez sz\\xFCks\\xE9ges pontsz\\xE1m, de maximum \", maxPoints))), /*#__PURE__*/React.createElement(\"button\", {\n    name: \"M\\xF3dos\\xEDt\\xE1s\",\n    className: \"btn btn-warning m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, \"M\\xF3dos\\xEDt\\xE1s!\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: statusChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, \"A vizsga jelenleg \", status === 1 ? 'Aktív' : 'Inaktív'), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"examStatus\",\n    className: \"rounded pl-2 w-25 mb-3\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, \"\\xC1llapotv\\xE1lt\\xE1s...\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }, \"Akt\\xEDv\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, \"Inakt\\xEDv\")), /*#__PURE__*/React.createElement(\"button\", {\n    name: \"M\\xF3dos\\xEDt\\xE1s\",\n    className: \"btn btn-warning m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, \"M\\xF3dos\\xEDt\\xE1s!\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container text-center rounded w-75 shadow bg-light p-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, \"A vizsg\\xE1hoz tartoz\\xF3 k\\xE9rd\\xE9sek\"), questions.length === 0 ? warning : /*#__PURE__*/React.createElement(ListManager, {\n    socket: socket,\n    list: questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 52\n    }\n  }), /*#__PURE__*/React.createElement(AddQuestion, {\n    socket: socket,\n    display: displayQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: setDisplay,\n    className: \"btn btn-warning m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, !displayQuestion ? 'Kérdés hozzáadása' : 'Mégse'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: removeExam,\n    className: \"btn btn-warning m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, \"A vizsga t\\xF6rl\\xE9se\")));\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/modify/ExamModify.js"],"names":["React","useState","useEffect","useParams","Redirect","ListManager","ModalElement","manager","API","AddQuestion","ExamModify","props","examCode","socket","warning","setWarning","examProps","setExamProps","status","setStatus","questions","setQuestions","maxPoints","setMaxPoints","displayQuestion","setDisplayQuestion","updater","setUpdater","removed","setRemoved","emit","examName","on","questionList","notes","points","list","examPoints","forEach","question","answers","answer","push","id","text","correct","sort","a","b","name","disconnect","count","handleSubmit","event","preventDefault","post","then","response","data","updated","catch","err","console","log","statusChange","handleChange","slice","target","value","setDisplay","display","removeExam","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useParams, Redirect} from 'react-router-dom'\r\n\r\nimport ListManager from './ListManager'\r\nimport ModalElement from './ModifyPdf'\r\n\r\nimport manager from '../../GlobalSocket'\r\n\r\nimport API from '../../BackendAPI'\r\nimport AddQuestion from './AddQuestion'\r\n\r\nexport default function ExamModify(props){\r\n\r\n    const examCode = useParams()\r\n    const socket = new manager().socket\r\n\r\n    const [warning, setWarning] = useState(null)\r\n    const [examProps, setExamProps] = useState([])\r\n    const [status, setStatus] = useState(null)\r\n    const [questions, setQuestions] = useState([])\r\n    const [maxPoints, setMaxPoints] = useState(0)\r\n    const [displayQuestion, setDisplayQuestion] = useState(false)\r\n    const [updater, setUpdater] = useState(0)\r\n\r\n    const [removed, setRemoved] = useState(false)\r\n\r\n    useEffect(() => {\r\n        socket.emit('request-exam-content', examCode.examName)\r\n\r\n        socket.on('exam-content', (examName, questionList, notes, status, points) => {\r\n            let list = []\r\n            let examPoints = 0\r\n            setQuestions([])\r\n            questionList.forEach((question) => {\r\n                let answers = []\r\n                if(question.answers){\r\n                    question.answers.forEach(answer => {\r\n                        answers.push([answer.id, answer.text, answer.correct])\r\n                    })\r\n                    answers.sort((a, b) => a[0] - b[0])\r\n                }\r\n                examPoints += question.points\r\n\r\n                list.push([question.id, question.name, question.points, answers])\r\n            })\r\n\r\n            list.sort((a, b) => a[0] - b[0])\r\n\r\n            setQuestions(list)\r\n            setStatus(status)\r\n            setMaxPoints(examPoints)\r\n            setExamProps([examName, notes === 'null' ? '' : notes, status, points])\r\n        })\r\n\r\n        socket.on('exam-content-no-question', (examName, notes, status, points) => {\r\n            setQuestions([])\r\n            setWarning('Nincsenek megjeleníthető kérdések.')\r\n            setStatus(status)\r\n            if(points > 0){\r\n                points = 0\r\n                socket.emit('examPoints-mislead', examCode.examName)\r\n            }\r\n            setMaxPoints(points)\r\n            setExamProps([examName, notes === 'null' ? '' : notes, status, points])\r\n        })\r\n\r\n        return () => socket.disconnect()\r\n        // eslint-disable-next-line\r\n    }, [updater, examCode.examName])\r\n\r\n    useEffect(() => {\r\n        socket.on('server-accept', () => {\r\n            setUpdater(count => ++count)\r\n        })\r\n\r\n        socket.on('removed-exam', () => {\r\n            socket.emit('get-products')\r\n            socket.emit('exams-get-signal')\r\n            setRemoved(true)\r\n        })\r\n    })\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault()\r\n        if(examProps != null){\r\n            API.post(`/exams/modify/${examCode.examName}`, \r\n                {examName: examProps[0], notes: examProps[1], points: examProps[3]})\r\n            .then(response => {\r\n                if(response.data.updated){\r\n                    socket.emit('exam-modified')\r\n                }\r\n            }).catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    function statusChange(event){\r\n        event.preventDefault()\r\n        if(examProps[3] != null){\r\n            API.post(`/exams/modify/${examCode.examName}`, {status: examProps[3]})\r\n            .then(response => {\r\n                if(response.data.updated){\r\n                    socket.emit('exam-modified')\r\n                }\r\n            }).catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    function handleChange(event){\r\n        const list = examProps.slice()\r\n        switch(event.target.name){\r\n            case 'examName':\r\n                list[0] = event.target.value\r\n                setExamProps(list)\r\n                break\r\n            case 'examNotes':\r\n                list[1] = event.target.value\r\n                setExamProps(list)\r\n                break\r\n            case 'examStatus':\r\n                if(event.target.value === 'Állapotváltás...'){\r\n                    break\r\n                }\r\n                list[2] = event.target.value\r\n                setExamProps(list)\r\n                break\r\n            case 'examMinPoints':\r\n                if(event.target.value > maxPoints){\r\n                    list[3] = maxPoints\r\n                }else if(event.target.value < 0){\r\n                    list[3] = 0\r\n                }else{\r\n                    list[3] = event.target.value\r\n                }\r\n                setExamProps(list)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    function setDisplay(event){\r\n        event.preventDefault()\r\n        setDisplayQuestion(display => !display)\r\n    }\r\n\r\n    function removeExam(event){\r\n        event.preventDefault()\r\n        socket.emit('remove-test', examCode.examName)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container text-center mb-3\">\r\n            {removed ? <Redirect from={`/exams/modify/${examCode.examName}`} to='/exams' /> : null}\r\n            <div className=\"container text-center rounded w-75 mb-5 p-3 shadow bg-light\">\r\n                <h3>A vizsga jellemzői:</h3>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group m-auto\">\r\n                        <input type='text' name='examName' value={examProps[0] || ''} onChange={handleChange} required/>\r\n                        <label htmlFor=\"examName\" className=\"label-name\">\r\n                            <span className=\"content-name\">\r\n                                A vizsga neve\r\n                            </span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-group m-auto\">\r\n                        <input type='text' name='examNotes' value={examProps[1] || ''} onChange={handleChange}/>\r\n                        <label htmlFor=\"examNotes\" className=\"label-name\">\r\n                            <span className=\"content-name\">\r\n                                A vizsga megjegyzése\r\n                            </span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-group m-auto\">\r\n                        <input type='number' name='examMinPoints' value={examProps[3] || 0} onChange={handleChange} required/>\r\n                        <label htmlFor=\"examMinPoints\" className=\"label-name\">\r\n                            <span className=\"content-name\">\r\n                                A vizsga elvégzéséhez szükséges pontszám, de maximum {maxPoints}\r\n                            </span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <button name='Módosítás' className=\"btn btn-warning m-2\">Módosítás!</button>\r\n                </form>\r\n\r\n                <form onSubmit={statusChange}>\r\n                    <p>A vizsga jelenleg {status === 1 ? 'Aktív' : 'Inaktív'}</p>\r\n\r\n                    <select name='examStatus' className=\"rounded pl-2 w-25 mb-3\" onChange={handleChange}>\r\n                        <option value={null}>Állapotváltás...</option>\r\n                        <option value={1}>Aktív</option>\r\n                        <option value={0}>Inaktív</option>\r\n                    </select>\r\n\r\n                    <button name='Módosítás' className=\"btn btn-warning m-2\">Módosítás!</button>\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"container text-center rounded w-75 shadow bg-light p-3 mb-3\">\r\n                <h3>A vizsgához tartozó kérdések</h3>\r\n\r\n                {questions.length === 0 ? warning: <ListManager socket={socket} list={questions} />}\r\n\r\n                <AddQuestion socket={socket} display={displayQuestion} />\r\n\r\n                <button onClick={setDisplay} className=\"btn btn-warning m-2\">{!displayQuestion ? 'Kérdés hozzáadása' : 'Mégse'}</button>\r\n\r\n                <button onClick={removeExam} className=\"btn btn-warning m-3\">A vizsga törlése</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}