{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\modify\\\\ListManager.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport AddAnswer from './AddAnswer';\nimport ModifyPic from './ModifyPic';\nimport Modifier from './Modifier';\nexport default function ListManager(props) {\n  const examCode = useParams().examName;\n  const socket = props.socket;\n  const questionId = props.questionId;\n  const [list, setList] = useState([]);\n  const [display, setDisplay] = useState(false);\n  const [disableButton, setDisableButton] = useState(props.disable || false);\n\n  function modifyDisplay(event) {\n    event.preventDefault();\n    setDisplay(state => !state);\n  }\n\n  function remove(e, id) {\n    e.preventDefault();\n    setDisableButton(true);\n\n    if (props.isAnswer) {\n      socket.emit('remove-answer', id, examCode);\n    } else {\n      socket.emit('remove-question', id, examCode);\n    }\n  }\n\n  useEffect(() => {\n    setList(props.list);\n  }, [props.list]);\n  useEffect(() => {\n    socket.on('server-accept', () => {\n      setDisableButton(false);\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, list.length === 0 ? /*#__PURE__*/React.createElement(\"li\", {\n    className: \"alert alert-danger my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 37\n    }\n  }, \"Nincs megjelen\\xEDthet\\u0151 tartalom!\") : list.map((el, kerdesIndex) => {\n    return el.map((inner, index) => {\n      //inner - belső tömb eleme\n      if (index === 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"container\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"float-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 66\n          }\n        }, kerdesIndex + 1, \".\")), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          disabled: disableButton,\n          className: \"btn btn-warning float-right\",\n          onClick: e => {\n            remove(e, inner);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 41\n          }\n        }, \"T\\xF6rl\\xE9s\")));\n      } else if (index === 2) {\n        /*\r\n        Itt jelennek meg a kérdések és a válaszok értékei\r\n        Ha boolean típusú az aktuális elem, akkor válasz, ha nem akkor kérdés\r\n        */\n        if (typeof inner === 'boolean') {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"b\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 49\n            }\n          }, inner ? /*#__PURE__*/React.createElement(\"span\", {\n            className: \"text-success\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 61\n            }\n          }, \"Helyes\") : /*#__PURE__*/React.createElement(\"span\", {\n            className: \"text-danger\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 108\n            }\n          }, \"Helytelen\")), /*#__PURE__*/React.createElement(Modifier, {\n            socket: socket,\n            index: el[0],\n            value: inner,\n            isAnswer: true,\n            disable: disableButton,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }\n          }));\n        } else {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 40\n            }\n          }, /*#__PURE__*/React.createElement(Modifier, {\n            socket: socket,\n            index: el[0],\n            value: inner,\n            disable: disableButton,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }\n          }));\n        }\n      } else if (index === 4) {\n        /*\r\n        Ilyenkor a lista újra meghívásra kerül, mivel akkor már a válaszokat\r\n        jeleníti meg\r\n        */\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          className: \"jumbotron mb-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }\n        }, \"A k\\xE9rd\\xE9shez tartoz\\xF3 v\\xE1laszok:\")), /*#__PURE__*/React.createElement(ListManager, {\n          socket: socket,\n          questionId: el[0],\n          list: inner,\n          isAnswer: true,\n          disable: disableButton,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }\n        }));\n      } else if (index === 3) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(ModifyPic, {\n          picture: inner,\n          questionId: el[0],\n          exam: examCode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 37\n          }\n        }));\n      } else {\n        //Itt jelennek meg a kérdések és a válaszok (a konkrét szöveg)\n        if (props.isAnswer) {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 40\n            }\n          }, /*#__PURE__*/React.createElement(Modifier, {\n            socket: socket,\n            index: el[0],\n            value: inner,\n            isAnswer: true,\n            disable: disableButton,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }\n          }));\n        } else {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 40\n            }\n          }, /*#__PURE__*/React.createElement(Modifier, {\n            socket: socket,\n            index: el[0],\n            value: inner,\n            disable: disableButton,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 41\n            }\n          }));\n        }\n      }\n    });\n  }), /*#__PURE__*/React.createElement(AddAnswer, {\n    socket: props.socket,\n    questionId: questionId,\n    display: display,\n    disable: disableButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), props.isAnswer ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: modifyDisplay,\n    className: \"btn btn-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, !display ? 'Válasz hozzáadása' : 'Mégse')) : null);\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/modify/ListManager.js"],"names":["React","useEffect","useState","useParams","AddAnswer","ModifyPic","Modifier","ListManager","props","examCode","examName","socket","questionId","list","setList","display","setDisplay","disableButton","setDisableButton","disable","modifyDisplay","event","preventDefault","state","remove","e","id","isAnswer","emit","on","length","map","el","kerdesIndex","inner","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport AddAnswer from './AddAnswer'\r\nimport ModifyPic from './ModifyPic'\r\nimport Modifier from './Modifier'\r\n\r\nexport default function ListManager(props){\r\n\r\n    const examCode = useParams().examName\r\n    const socket = props.socket\r\n    const questionId = props.questionId\r\n\r\n    const [list, setList] = useState([])\r\n    const [display, setDisplay] = useState(false)\r\n    const [disableButton, setDisableButton] = useState(props.disable || false)\r\n\r\n    function modifyDisplay(event){\r\n        event.preventDefault()\r\n        setDisplay(state => !state)\r\n    }\r\n\r\n    function remove(e, id){\r\n        e.preventDefault()\r\n        setDisableButton(true)\r\n        if(props.isAnswer){\r\n            socket.emit('remove-answer', id, examCode)\r\n        }else{\r\n            socket.emit('remove-question', id, examCode)\r\n        }\r\n    }\r\n\r\n    useEffect(() =>{\r\n        setList(props.list)\r\n    }, [props.list])\r\n\r\n    useEffect(() => {\r\n        socket.on('server-accept', () => {\r\n            setDisableButton(false)\r\n        })\r\n    })\r\n\r\n    return (\r\n        <ul>\r\n            {\r\n                list.length === 0 ? <li className=\"alert alert-danger my-2\">Nincs megjeleníthető tartalom!</li> :\r\n                list.map((el,kerdesIndex) => {\r\n                    return el.map((inner, index) => { //inner - belső tömb eleme\r\n                        if(index === 0){\r\n                            return (\r\n                                <div className=\"container\" key={index}>\r\n                                    <span className=\"float-left\"><b>{kerdesIndex+1}.</b></span>\r\n                                    <li>\r\n                                        <button disabled={disableButton}\r\n                                            className=\"btn btn-warning float-right\" \r\n                                            onClick={e =>{remove(e, inner)}}>\r\n                                                Törlés\r\n                                        </button>\r\n                                    </li>\r\n                                </div>)\r\n                        }else if(index === 2){\r\n                            /*\r\n                            Itt jelennek meg a kérdések és a válaszok értékei\r\n                            Ha boolean típusú az aktuális elem, akkor válasz, ha nem akkor kérdés\r\n                            */\r\n                            if(typeof inner === 'boolean'){\r\n                                return (\r\n                                <li key={index}><b>{inner ? <span className=\"text-success\">Helyes</span> : <span className=\"text-danger\">Helytelen</span>}</b>\r\n                                    <Modifier socket={socket} index={el[0]} \r\n                                        value={inner} isAnswer={true} disable={disableButton}/>\r\n                                </li>)\r\n                            }else{\r\n                                return <li key={index}>\r\n                                    <Modifier socket={socket} index={el[0]} value={inner} disable={disableButton}/>\r\n                                    </li>\r\n                            }\r\n                        }else if(index === 4){\r\n                            /*\r\n                            Ilyenkor a lista újra meghívásra kerül, mivel akkor már a válaszokat\r\n                            jeleníti meg\r\n                            */\r\n                            return (\r\n                            <div key={index} className=\"jumbotron mb-2\">\r\n                                <h3><p>A kérdéshez tartozó válaszok:</p></h3>\r\n                                <ListManager socket={socket} questionId={el[0]} \r\n                                    list={inner} isAnswer={true} disable={disableButton}/>\r\n                            </div>)\r\n\r\n                        }else if(index === 3){\r\n                            return (\r\n                                <li key={index}>\r\n                                    <ModifyPic picture={inner} questionId={el[0]} exam={examCode}/>\r\n                                </li>\r\n                            )\r\n                        }else{\r\n                            //Itt jelennek meg a kérdések és a válaszok (a konkrét szöveg)\r\n                            if(props.isAnswer){\r\n                                return <li key={index}>\r\n                                    <Modifier socket={socket} index={el[0]} \r\n                                        value={inner} isAnswer={true} disable={disableButton}/>\r\n                                    </li>\r\n                            }else{\r\n                                return <li key={index}>\r\n                                        <Modifier socket={socket} index={el[0]} value={inner} disable={disableButton}/>\r\n                                    </li>\r\n                            }\r\n                        }\r\n                    })\r\n                })    \r\n            }\r\n            <AddAnswer socket={props.socket} questionId={questionId} display={display}  disable={disableButton}/>\r\n            {props.isAnswer ? \r\n                <li>\r\n                    <button onClick={modifyDisplay} className=\"btn btn-warning\">\r\n                        {!display ? 'Válasz hozzáadása' : 'Mégse'}\r\n                    </button>\r\n                </li> : null}       \r\n        </ul>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}