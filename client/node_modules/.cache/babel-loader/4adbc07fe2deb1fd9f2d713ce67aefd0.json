{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\modify\\\\ListManager.js\";\nimport React, { useEffect, useState } from 'react';\nimport Modifier from './Modifier';\nexport default function ListManager(props) {\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    setList(props.list);\n    console.log(props.isAnswer);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, list.length === 0 ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 37\n    }\n  }, \"Nincs megjelen\\xEDthet\\u0151 tartalom\") : list.map(el => {\n    return el.map((inner, index) => {\n      if (index === 3) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 33\n          }\n        }, \"A k\\xE9rd\\xE9shez tartoz\\xF3 v\\xE1laszok:\"), /*#__PURE__*/React.createElement(ListManager, {\n          list: inner,\n          isAnswer: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }\n        }));\n      } else if (index === 0) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 36\n          }\n        }, \"Azonos\\xEDt\\xF3: \", inner);\n      } else if (index === 2) {\n        if (typeof el === 'boolean') {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 40\n            }\n          }, \"\\xC9rt\\xE9k: \", /*#__PURE__*/React.createElement(Modifier, {\n            value: inner,\n            isAnswer: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 63\n            }\n          }));\n        } else {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 40\n            }\n          }, \"Pontsz\\xE1m: \", /*#__PURE__*/React.createElement(Modifier, {\n            value: inner,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 66\n            }\n          }));\n        }\n      } else {\n        if (props.isAnswer) {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 40\n            }\n          }, \"V\\xE1lasz: \", inner);\n        } else {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 40\n            }\n          }, \"K\\xE9rd\\xE9s: \", inner);\n        }\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/modify/ListManager.js"],"names":["React","useEffect","useState","Modifier","ListManager","props","list","setList","console","log","isAnswer","length","map","el","inner","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AAEtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXM,IAAAA,OAAO,CAACF,KAAK,CAACC,IAAP,CAAP;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,QAAlB;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQJ,IAAI,CAACK,MAAL,KAAgB,CAAhB,gBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAApB,GACAL,IAAI,CAACM,GAAL,CAAUC,EAAD,IAAQ;AACb,WAAOA,EAAE,CAACD,GAAH,CAAO,CAACE,KAAD,EAAQC,KAAR,KAAkB;AAC5B,UAAGA,KAAK,KAAK,CAAb,EAAe;AACX,4BACA;AAAK,UAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADJ,eAEI,oBAAC,WAAD;AAAa,UAAA,IAAI,EAAED,KAAnB;AAA0B,UAAA,QAAQ,EAAE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADA;AAKH,OAND,MAMM,IAAGC,KAAK,KAAK,CAAb,EAAe;AACjB,4BAAO;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA4BD,KAA5B,CAAP;AACH,OAFK,MAEA,IAAGC,KAAK,KAAK,CAAb,EAAe;AACjB,YAAG,OAAOF,EAAP,KAAc,SAAjB,EAA2B;AACvB,8BAAO;AAAI,YAAA,GAAG,EAAEE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAuB,oBAAC,QAAD;AAAU,YAAA,KAAK,EAAED,KAAjB;AAAwB,YAAA,QAAQ,EAAE,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvB,CAAP;AACH,SAFD,MAEK;AACD,8BAAO;AAAI,YAAA,GAAG,EAAEC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAA0B,oBAAC,QAAD;AAAU,YAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA1B,CAAP;AACH;AACJ,OANK,MAMD;AACD,YAAGT,KAAK,CAACK,QAAT,EAAkB;AACd,8BAAO;AAAI,YAAA,GAAG,EAAEK,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAyBD,KAAzB,CAAP;AACH,SAFD,MAEK;AACD,8BAAO;AAAI,YAAA,GAAG,EAAEC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAyBD,KAAzB,CAAP;AACH;AACJ;AACJ,KAtBM,CAAP;AAwBH,GAzBD,CAHR,CADJ;AAiCH","sourcesContent":["import React, {useEffect, useState} from 'react'\r\n\r\nimport Modifier from './Modifier'\r\n\r\nexport default function ListManager(props){\r\n\r\n    const [list, setList] = useState([])\r\n\r\n    useEffect(() =>{\r\n        setList(props.list)\r\n        console.log(props.isAnswer)\r\n    }, [])\r\n\r\n    return (\r\n        <ul>\r\n            {\r\n                list.length === 0 ? <li>Nincs megjeleníthető tartalom</li> :\r\n                list.map((el) => {\r\n                    return el.map((inner, index) => {\r\n                        if(index === 3){\r\n                            return (\r\n                            <div key={index}>\r\n                                <div>A kérdéshez tartozó válaszok:</div>\r\n                                <ListManager list={inner} isAnswer={true}/>\r\n                            </div>)\r\n                        }else if(index === 0){\r\n                            return <li key={index}>Azonosító: {inner}</li>\r\n                        }else if(index === 2){\r\n                            if(typeof el === 'boolean'){\r\n                                return <li key={index}>Érték: <Modifier value={inner} isAnswer={true}/></li>\r\n                            }else{\r\n                                return <li key={index}>Pontszám: <Modifier value={inner}/></li>\r\n                            }\r\n                        }else{\r\n                            if(props.isAnswer){\r\n                                return <li key={index}>Válasz: {inner}</li>\r\n                            }else{\r\n                                return <li key={index}>Kérdés: {inner}</li>\r\n                            }\r\n                        }\r\n                    })\r\n                    \r\n                })\r\n}\r\n        </ul>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}