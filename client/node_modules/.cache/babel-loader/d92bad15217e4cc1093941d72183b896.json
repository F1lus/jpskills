{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\modify\\\\ExamModify.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport ListManager from './ListManager';\nimport API from '../../BackendAPI';\nimport AddQuestion from './AddQuestion';\nexport default function ExamModify(props) {\n  const [examCode] = useState(useParams());\n  const [warning, setWarning] = useState(null);\n  const [examProps, setExamProps] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [maxPoints, setMaxPoints] = useState(0);\n  const [displayQuestion, setDisplayQuestion] = useState(false);\n  const [modifyResult, setModifyResult] = useState(null);\n  useEffect(() => {\n    const socket = io('http://localhost:5000', {\n      withCredentials: true\n    });\n    socket.emit('request-exam-content', examCode.examName);\n    socket.on('exam-content', (examName, questionList, notes, status, points) => {\n      let list = [];\n      console.log(status);\n      questionList.forEach(question => {\n        let answers = [];\n        question.answers.forEach(answer => {\n          answers.push([answer.id, answer.text, answer.correct]);\n        });\n        setMaxPoints(points => points + question.points);\n        list.push([question.id, question.name, question.points, answers]);\n      });\n      setQuestions(list);\n      setExamProps([examName, notes, status, points]);\n    });\n    socket.on('exam-content-no-question', (examName, notes, status, points) => {\n      setQuestions([]);\n      setWarning('Nincsenek megjeleníthető kérdések.');\n      setExamProps([examName, notes, status, points]);\n    });\n  }, [examCode.examName]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(examProps[2]);\n\n    if (examProps != null && examProps.length === 4) {\n      API.post(`/exams/modify/${examCode.examName}`, {\n        examName: examProps[0],\n        notes: examProps[1],\n        status: examProps[2],\n        points: examProps[3]\n      }).then(response => {\n        if (response) {\n          setModifyResult(response.data.updated);\n        }\n      }).catch(err => console.log(err));\n    }\n  }\n\n  function handleChange(event) {\n    const list = examProps.slice();\n\n    switch (event.target.name) {\n      case 'examName':\n        list[0] = event.target.value;\n        setExamProps(list);\n        break;\n\n      case 'examNotes':\n        list[1] = event.target.value;\n        setExamProps(list);\n        break;\n\n      case 'examStatus':\n        if (event.target.value === 'Állapotváltás...') {\n          break;\n        }\n\n        list[2] = event.target.value;\n        setExamProps(list);\n        break;\n\n      case 'examMinPoints':\n        if (event.target.value > maxPoints) {\n          list[3] = maxPoints;\n        } else if (event.target.value < 0) {\n          list[3] = 0;\n        } else {\n          list[3] = event.target.value;\n        }\n\n        setExamProps(list);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function setDisplay(event) {\n    event.preventDefault();\n    setDisplayQuestion(display => !display);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"A vizsga jellemz\\u0151i:\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"examName\",\n    value: examProps[0] || '',\n    placeholder: \"A vizsga neve\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"examNotes\",\n    value: examProps[1] || '',\n    placeholder: \"A vizsga megjegyz\\xE9se\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"A vizsga jelenlegi \\xE1llapota: \", examProps[2] ? 'Aktív' : 'Inaktív'), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"examStatus\",\n    className: \"rounded pl-2 w-25\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"\\xC1llapotv\\xE1lt\\xE1s...\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"Akt\\xEDv\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"Inakt\\xEDv\")), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"Maximum: \", maxPoints), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"examMinPoints\",\n    value: examProps[3] || '',\n    placeholder: \"A vizsga elv\\xE9gz\\xE9s\\xE9hez sz\\xFCks\\xE9ges pontsz\\xE1m\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    name: \"M\\xF3dos\\xEDt\\xE1s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"A vizsg\\xE1hoz tartoz\\xF3 k\\xE9rd\\xE9sek\"), questions.length === 0 ? warning : /*#__PURE__*/React.createElement(ListManager, {\n    list: questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 48\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: setDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, !displayQuestion ? 'Kérdés hozzáadása' : 'Mégse'), /*#__PURE__*/React.createElement(AddQuestion, {\n    display: displayQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"A vizsga t\\xF6rl\\xE9se\"));\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/modify/ExamModify.js"],"names":["React","useState","useEffect","useParams","io","ListManager","API","AddQuestion","ExamModify","props","examCode","warning","setWarning","examProps","setExamProps","questions","setQuestions","maxPoints","setMaxPoints","displayQuestion","setDisplayQuestion","modifyResult","setModifyResult","socket","withCredentials","emit","examName","on","questionList","notes","status","points","list","console","log","forEach","question","answers","answer","push","id","text","correct","name","handleSubmit","event","preventDefault","length","post","then","response","data","updated","catch","err","handleChange","slice","target","value","setDisplay","display"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport {io} from 'socket.io-client'\r\n\r\nimport ListManager from './ListManager'\r\n\r\nimport API from '../../BackendAPI'\r\nimport AddQuestion from './AddQuestion'\r\n\r\nexport default function ExamModify(props){\r\n\r\n    const [examCode,] = useState(useParams())\r\n\r\n    const [warning, setWarning] = useState(null)\r\n    const [examProps, setExamProps] = useState([])\r\n    const [questions, setQuestions] = useState([])\r\n    const [maxPoints, setMaxPoints] = useState(0)\r\n    const [displayQuestion, setDisplayQuestion] = useState(false)\r\n    const [modifyResult, setModifyResult] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const socket = io('http://localhost:5000', {withCredentials:true})\r\n\r\n        socket.emit('request-exam-content', examCode.examName)\r\n\r\n        socket.on('exam-content', (examName, questionList, notes, status, points) => {\r\n            let list = []\r\n            console.log(status)\r\n            questionList.forEach((question) => {\r\n                let answers = []\r\n                question.answers.forEach(answer => {\r\n                    answers.push([answer.id, answer.text, answer.correct])\r\n                })\r\n                setMaxPoints(points => points + question.points)\r\n                list.push([question.id, question.name, question.points, answers])\r\n            })\r\n            setQuestions(list)\r\n            setExamProps([examName, notes, status, points])\r\n        })\r\n\r\n        socket.on('exam-content-no-question', (examName, notes, status, points) => {\r\n            setQuestions([])\r\n            setWarning('Nincsenek megjeleníthető kérdések.')\r\n            setExamProps([examName, notes, status, points])\r\n        })\r\n    }, [examCode.examName])\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault()\r\n        console.log(examProps[2])\r\n        if(examProps != null && examProps.length === 4){\r\n            API.post(`/exams/modify/${examCode.examName}`, \r\n                {examName: examProps[0], notes: examProps[1], status: examProps[2], points: examProps[3]})\r\n            .then(response => {\r\n                if(response){\r\n                    setModifyResult(response.data.updated)\r\n                }\r\n            }).catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    function handleChange(event){\r\n        const list = examProps.slice()\r\n        switch(event.target.name){\r\n            case 'examName':\r\n                list[0] = event.target.value\r\n                setExamProps(list)\r\n                break\r\n            case 'examNotes':\r\n                list[1] = event.target.value\r\n                setExamProps(list)\r\n                break\r\n            case 'examStatus':\r\n                if(event.target.value === 'Állapotváltás...'){\r\n                    break\r\n                }\r\n                list[2] = event.target.value\r\n                setExamProps(list)\r\n                break\r\n            case 'examMinPoints':\r\n                if(event.target.value > maxPoints){\r\n                    list[3] = maxPoints\r\n                }else if(event.target.value < 0){\r\n                    list[3] = 0\r\n                }else{\r\n                    list[3] = event.target.value\r\n                }\r\n                setExamProps(list)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    function setDisplay(event){\r\n        event.preventDefault()\r\n        setDisplayQuestion(display => !display)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container bg-light\">\r\n            <h3>A vizsga jellemzői:</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type='text' name='examName' \r\n                    value={examProps[0] || ''} placeholder='A vizsga neve' onChange={handleChange}\r\n                />\r\n                <input type='text' name='examNotes' \r\n                    value={examProps[1] || ''} placeholder='A vizsga megjegyzése' onChange={handleChange}\r\n                />\r\n                <p>A vizsga jelenlegi állapota: {examProps[2] ? 'Aktív' : 'Inaktív'}</p>\r\n                <select name='examStatus' className=\"rounded pl-2 w-25\" onChange={handleChange}>\r\n                    <option value={null}>Állapotváltás...</option>\r\n                    <option value={true}>Aktív</option>\r\n                    <option value={false}>Inaktív</option>\r\n                </select>\r\n                <h5>Maximum: {maxPoints}</h5>\r\n                <input type='number' name='examMinPoints' \r\n                    value={examProps[3] || ''} placeholder='A vizsga elvégzéséhez szükséges pontszám' onChange={handleChange}\r\n                />\r\n                <input type='submit' name='Módosítás' />\r\n            </form>\r\n\r\n            <h3>A vizsgához tartozó kérdések</h3>\r\n\r\n            {questions.length === 0 ? warning: <ListManager list={questions} />}\r\n\r\n            <button onClick={setDisplay}>{!displayQuestion ? 'Kérdés hozzáadása' : 'Mégse'}</button>\r\n\r\n            <AddQuestion display={displayQuestion} />\r\n\r\n            <button>A vizsga törlése</button>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}