{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\modify\\\\ExamModify.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ListManager from './ListManager';\nimport API from '../../BackendAPI';\nexport default function ExamModify() {\n  // eslint-disable-next-line\n  const [examCode, setExamCode] = useState(useParams());\n  const [warning, setWarning] = useState(null);\n  const [examName, setExamName] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    API.get(`/exams/${examCode.examName}`).then(result => {\n      if (result) {\n        if (result.data.questions) {\n          let list = [];\n          result.data.questions.forEach(question => {\n            let answers = [];\n            question.answers.forEach(answer => {\n              answers.push(answer.id, answer.text, answer.correct);\n            });\n            list.push([question.id, question.name, question.points, 'A kérdéshez tartozó válaszok', ...answers]);\n          });\n          setExamName(result.data.name);\n          setQuestions(list);\n          console.log(questions);\n        } else {\n          setExamName(result.data.name);\n          setQuestions([]);\n          setWarning('Nincsenek megjeleníthető kérdések.');\n        }\n      }\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, examName), /*#__PURE__*/React.createElement(ListManager, {\n    list: questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"K\\xE9rd\\xE9s hozz\\xE1ad\\xE1sa\"));\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/modify/ExamModify.js"],"names":["React","useState","useEffect","useParams","ListManager","API","ExamModify","examCode","setExamCode","warning","setWarning","examName","setExamName","questions","setQuestions","get","then","result","data","list","forEach","question","answers","answer","push","id","text","correct","name","points","console","log","catch","err"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,eAAe,SAASC,UAAT,GAAqB;AAEhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAACE,SAAS,EAAV,CAAxC;AAEA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,GAAG,CAACU,GAAJ,CAAS,UAASR,QAAQ,CAACI,QAAS,EAApC,EACKK,IADL,CACUC,MAAM,IAAI;AACZ,UAAGA,MAAH,EAAU;AACN,YAAGA,MAAM,CAACC,IAAP,CAAYL,SAAf,EAAyB;AACrB,cAAIM,IAAI,GAAG,EAAX;AACAF,UAAAA,MAAM,CAACC,IAAP,CAAYL,SAAZ,CAAsBO,OAAtB,CAA8BC,QAAQ,IAAI;AACtC,gBAAIC,OAAO,GAAG,EAAd;AACAD,YAAAA,QAAQ,CAACC,OAAT,CAAiBF,OAAjB,CAAyBG,MAAM,IAAI;AAC/BD,cAAAA,OAAO,CAACE,IAAR,CAAaD,MAAM,CAACE,EAApB,EAAwBF,MAAM,CAACG,IAA/B,EAAqCH,MAAM,CAACI,OAA5C;AACH,aAFD;AAGAR,YAAAA,IAAI,CAACK,IAAL,CAAU,CAACH,QAAQ,CAACI,EAAV,EAAcJ,QAAQ,CAACO,IAAvB,EAA6BP,QAAQ,CAACQ,MAAtC,EACN,8BADM,EAC0B,GAAGP,OAD7B,CAAV;AAEH,WAPD;AAQAV,UAAAA,WAAW,CAACK,MAAM,CAACC,IAAP,CAAYU,IAAb,CAAX;AACAd,UAAAA,YAAY,CAACK,IAAD,CAAZ;AACAW,UAAAA,OAAO,CAACC,GAAR,CAAYlB,SAAZ;AACH,SAbD,MAaK;AACDD,UAAAA,WAAW,CAACK,MAAM,CAACC,IAAP,CAAYU,IAAb,CAAX;AACAd,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACAJ,UAAAA,UAAU,CAAC,oCAAD,CAAV;AACH;AACJ;AACJ,KAtBL,EAsBOsB,KAtBP,CAsBaC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAtBpB;AAuBH,GAxBQ,EAwBP,EAxBO,CAAT;AA0BA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKtB,QAAL,CADJ,eAGI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEE,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCALJ,CADJ;AASH","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport ListManager from './ListManager'\r\n\r\nimport API from '../../BackendAPI'\r\n\r\nexport default function ExamModify(){\r\n\r\n    // eslint-disable-next-line\r\n    const [examCode, setExamCode] = useState(useParams())\r\n\r\n    const [warning, setWarning] = useState(null)\r\n    const [examName, setExamName] = useState(null)\r\n    const [questions, setQuestions] = useState([])\r\n\r\n    useEffect(() => {\r\n        API.get(`/exams/${examCode.examName}`)\r\n            .then(result => {\r\n                if(result){\r\n                    if(result.data.questions){\r\n                        let list = []\r\n                        result.data.questions.forEach(question => {\r\n                            let answers = []\r\n                            question.answers.forEach(answer => {\r\n                                answers.push(answer.id, answer.text, answer.correct)\r\n                            })\r\n                            list.push([question.id, question.name, question.points, \r\n                                'A kérdéshez tartozó válaszok', ...answers])\r\n                        })\r\n                        setExamName(result.data.name)\r\n                        setQuestions(list)\r\n                        console.log(questions)\r\n                    }else{\r\n                        setExamName(result.data.name)\r\n                        setQuestions([])\r\n                        setWarning('Nincsenek megjeleníthető kérdések.')\r\n                    }\r\n                }\r\n            }).catch(err => console.log(err))\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <h1>{examName}</h1>\r\n\r\n            <ListManager list={questions} />\r\n\r\n            <button>Kérdés hozzáadása</button>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}