{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\examination\\\\Examination.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nexport default function Examination(props) {\n  const socket = props.socket;\n  const exam = useParams().examCode;\n  const [examProps, setExamProps] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    socket.emit('request-exam-content', exam);\n    socket.on('exam-content', (examName, questionList, notes, status, points) => {\n      setExamProps([examName, notes, status, points]);\n      let qList = [];\n      questionList.forEach(question => {\n        let answers = [];\n        question.answers.forEach(answer => {\n          answers.push([answer.id, answer.text, answer.correct]);\n        });\n        answers.sort((a, b) => a[0] - b[0]);\n        qList.push([question.id, question.name, question.points, question.pic, answers]);\n      });\n      qList.sort((a, b) => a[0] - b[0]);\n      setQuestions(qList);\n    }); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, questions.map);\n}","map":{"version":3,"sources":["C:/Users/MÃ¡rk/Documents/GitHub/jpskills/client/src/components/exams/examination/Examination.js"],"names":["React","useEffect","useState","useParams","Examination","props","socket","exam","examCode","examProps","setExamProps","questions","setQuestions","emit","on","examName","questionList","notes","status","points","qList","forEach","question","answers","answer","push","id","text","correct","sort","a","b","name","pic","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AAEtC,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,QAAMC,IAAI,GAAGJ,SAAS,GAAGK,QAAzB;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,CAACO,IAAP,CAAY,sBAAZ,EAAoCN,IAApC;AAEAD,IAAAA,MAAM,CAACQ,EAAP,CAAU,cAAV,EAA0B,CAACC,QAAD,EAAWC,YAAX,EAAyBC,KAAzB,EAAgCC,MAAhC,EAAwCC,MAAxC,KAAmD;AACzET,MAAAA,YAAY,CAAC,CAACK,QAAD,EAAWE,KAAX,EAAkBC,MAAlB,EAA0BC,MAA1B,CAAD,CAAZ;AACA,UAAIC,KAAK,GAAG,EAAZ;AACAJ,MAAAA,YAAY,CAACK,OAAb,CAAqBC,QAAQ,IAAI;AAC7B,YAAIC,OAAO,GAAG,EAAd;AACAD,QAAAA,QAAQ,CAACC,OAAT,CAAiBF,OAAjB,CAAyBG,MAAM,IAAI;AAC/BD,UAAAA,OAAO,CAACE,IAAR,CAAa,CAACD,MAAM,CAACE,EAAR,EAAYF,MAAM,CAACG,IAAnB,EAAyBH,MAAM,CAACI,OAAhC,CAAb;AACH,SAFD;AAGAL,QAAAA,OAAO,CAACM,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAA/B;AAEAX,QAAAA,KAAK,CAACK,IAAN,CAAW,CAACH,QAAQ,CAACI,EAAV,EAAcJ,QAAQ,CAACU,IAAvB,EAA6BV,QAAQ,CAACH,MAAtC,EAA8CG,QAAQ,CAACW,GAAvD,EAA4DV,OAA5D,CAAX;AACH,OARD;AASAH,MAAAA,KAAK,CAACS,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAA7B;AACAnB,MAAAA,YAAY,CAACQ,KAAD,CAAZ;AACH,KAdD,EAHY,CAmBZ;AACH,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,SAAS,CAACuB,GADf,CADJ;AAKH","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nexport default function Examination(props){\r\n\r\n    const socket = props.socket\r\n    const exam = useParams().examCode\r\n\r\n    const [examProps, setExamProps] = useState([])\r\n\r\n    const [questions, setQuestions] = useState([])\r\n\r\n    useEffect(() => {\r\n        socket.emit('request-exam-content', exam)\r\n\r\n        socket.on('exam-content', (examName, questionList, notes, status, points) => {\r\n            setExamProps([examName, notes, status, points])\r\n            let qList = []\r\n            questionList.forEach(question => {\r\n                let answers = []\r\n                question.answers.forEach(answer => {\r\n                    answers.push([answer.id, answer.text, answer.correct])\r\n                })\r\n                answers.sort((a, b) => a[0] - b[0])\r\n\r\n                qList.push([question.id, question.name, question.points, question.pic, answers])\r\n            })\r\n            qList.sort((a, b) => a[0] - b[0])\r\n            setQuestions(qList)\r\n        })\r\n\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {questions.map}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}