{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\examination\\\\RenderContent.js\";\nimport React, { useState } from 'react';\nexport default function RenderContent(props) {\n  const list = props.list;\n  const socket = props.socket;\n  const [answers, setAnswers] = useState([]);\n\n  function createImage(picture) {\n    const arrayBufferView = new Uint8Array(picture);\n    const blob = new Blob([arrayBufferView], {\n      type: 'image/jpeg'\n    });\n    const urlCreator = window.URL || window.webkitURL;\n    return urlCreator.createObjectURL(blob);\n  }\n\n  function handleChange(event, qId, aId) {\n    const answersCopy = answers.slice();\n    const answerObj = {\n      id: qId,\n      answers: []\n    };\n\n    if (event.target.checked) {\n      if (answersCopy.length === 0) {\n        answerObj.answers.push(aId);\n        answersCopy.push(answerObj);\n      } else {\n        const index = answersCopy.findIndex(value => value.id === qId);\n\n        if (index === -1) {\n          answerObj.answers.push(aId);\n          answersCopy.push(answerObj);\n        } else {\n          if (answersCopy[index].answers.findIndex(value => value = aId) === -1) {\n            answersCopy[index].answers.push(aId);\n          }\n        }\n      }\n    } else {\n      const index = answersCopy.findIndex(value => value.id === qId);\n\n      if (index !== -1) {\n        const answerIndex = answersCopy[index].answers.findIndex(value => value === aId);\n\n        if (answerIndex !== -1) {\n          answersCopy[index].answers.splice(answeIndex, 1);\n\n          if (answersCopy[index].answers.length === 0) {\n            answersCopy.splice(index, 1);\n          }\n        }\n      }\n    }\n\n    setAnswers(answersCopy);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(answers);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, list.map((question, qId) => {\n    return question.map((content, innerIndex) => {\n      if (innerIndex === 1) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: innerIndex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 40\n          }\n        }, qId + 1, \". \")), \" \", content, \" (\", question[2], \" pont)\");\n      } else if (innerIndex === 3 && content != null) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: innerIndex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"img-fluid\",\n          src: createImage(content),\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 37\n          }\n        }));\n      } else if (innerIndex === 4) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: innerIndex,\n          className: \"my-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }\n        }, content.map((text, index) => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"container\",\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"checkbox\",\n            name: index,\n            onChange: e => {\n              handleChange(e, question[0], text[0]);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 49\n            }\n          }), /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: index,\n            className: \"pl-1\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 49\n            }\n          }, \" \", text[1]));\n        }));\n      } else {\n        return null;\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Lead\\xE1s\"));\n}","map":{"version":3,"sources":["C:/Users/MÃ¡rk/Documents/GitHub/jpskills/client/src/components/exams/examination/RenderContent.js"],"names":["React","useState","RenderContent","props","list","socket","answers","setAnswers","createImage","picture","arrayBufferView","Uint8Array","blob","Blob","type","urlCreator","window","URL","webkitURL","createObjectURL","handleChange","event","qId","aId","answersCopy","slice","answerObj","id","target","checked","length","push","index","findIndex","value","answerIndex","splice","answeIndex","handleSubmit","preventDefault","console","log","map","question","content","innerIndex","text","e"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function RenderContent(props){\r\n\r\n    const list = props.list\r\n    const socket = props.socket\r\n\r\n    const [answers, setAnswers] = useState([])\r\n\r\n    function createImage(picture){\r\n        const arrayBufferView = new Uint8Array(picture)\r\n        const blob = new Blob([arrayBufferView], {type: 'image/jpeg'}) \r\n        const urlCreator = window.URL || window.webkitURL\r\n\r\n        return urlCreator.createObjectURL(blob)\r\n    }\r\n\r\n    function handleChange(event, qId, aId){\r\n        const answersCopy = answers.slice()\r\n        const answerObj = {id: qId, answers: []}\r\n        if(event.target.checked){\r\n            if(answersCopy.length === 0){\r\n                answerObj.answers.push(aId)\r\n                answersCopy.push(answerObj)\r\n            }else{\r\n                const index = answersCopy.findIndex(value => value.id === qId)\r\n                if(index === -1){\r\n                    answerObj.answers.push(aId)\r\n                    answersCopy.push(answerObj)\r\n                }else{\r\n                    if(answersCopy[index].answers.findIndex(value => value = aId) === -1){\r\n                        answersCopy[index].answers.push(aId)\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            const index = answersCopy.findIndex(value => value.id === qId)\r\n            if(index !== -1){\r\n                const answerIndex = answersCopy[index].answers.findIndex(value => value === aId)\r\n                if(answerIndex !== -1){\r\n                    answersCopy[index].answers.splice(answeIndex, 1)\r\n                    if(answersCopy[index].answers.length === 0){\r\n                        answersCopy.splice(index, 1)\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        setAnswers(answersCopy)\r\n    }\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault()\r\n        console.log(answers)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {list.map((question, qId) => {\r\n                    return question.map((content, innerIndex) => {\r\n                        if(innerIndex === 1){\r\n                            return (\r\n                                <li key={innerIndex}>\r\n                                    <b><span>{qId+1}. </span></b> {content} ({question[2]} pont)\r\n                                </li>)\r\n                        }else if(innerIndex === 3 && content != null){\r\n                            return (\r\n                                <li key={innerIndex}>\r\n                                    <img className='img-fluid' src={createImage(content)} alt=''/>\r\n                                </li>\r\n                            )\r\n                        }else if(innerIndex === 4){\r\n                            return (\r\n                                <li key={innerIndex} className=\"my-3\">\r\n                                    {content.map((text, index) => {\r\n                                        return(\r\n                                            <div className=\"container\" key={index}>\r\n                                                <input type=\"checkbox\" name={index} onChange={e => {\r\n                                                    handleChange(e, question[0], text[0])\r\n                                                }}/>\r\n                                                <label htmlFor={index} className=\"pl-1\"> {text[1]}</label>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </li>\r\n                            )\r\n                        }else{\r\n                            return null\r\n                        }\r\n                    })\r\n                })}\r\n            </ul>\r\n            <button onClick={handleSubmit}>LeadÃ¡s</button>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}