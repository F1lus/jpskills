{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\examination\\\\RenderContent.js\";\nimport React, { useState, useEffect } from 'react';\nexport default function RenderContent(props) {\n  const list = props.list;\n  const socket = props.socket;\n  const [answers, setAnswers] = useState([]);\n  const [disable, setDisable] = useState(false);\n\n  function createImage(picture) {\n    const arrayBufferView = new Uint8Array(picture);\n    const blob = new Blob([arrayBufferView], {\n      type: 'image/jpeg'\n    });\n    const urlCreator = window.URL || window.webkitURL;\n    return urlCreator.createObjectURL(blob);\n  }\n\n  function handleChange(event, qId, aId) {\n    const answersCopy = answers.slice();\n\n    if (event.target.checked) {\n      const index = answersCopy.findIndex(value => value.id === qId);\n\n      if (answersCopy[index].answers.findIndex(value => value === aId) === -1) {\n        answersCopy[index].answers.push(aId);\n      }\n    } else {\n      const index = answersCopy.findIndex(value => value.id === qId);\n\n      if (index !== -1) {\n        const answerIndex = answersCopy[index].answers.findIndex(value => value === aId);\n\n        if (answerIndex !== -1) {\n          answersCopy[index].answers.splice(answerIndex, 1);\n        }\n      }\n    }\n\n    setAnswers(answersCopy);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (answers.length === 0) {\n      alert('Még nem jelölt meg egy választ sem! Kérjük adjon meg legalább egyet!');\n    } else {\n      socket.emit('exam-finished', answers, props.exam);\n      setDisable(true);\n    }\n  }\n\n  useEffect(() => {\n    const temp = [];\n    list.forEach(question => {\n      const answerObj = {\n        id: question[0],\n        answers: []\n      };\n      temp.push(answerObj);\n    });\n    setAnswers(temp); // eslint-disable-next-line\n  }, [list]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, list.map((question, qId) => {\n    return question.map((content, innerIndex) => {\n      if (innerIndex === 1) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: innerIndex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 40\n          }\n        }, qId + 1, \". \")), \" \", content, \" (\", question[2], \" pont)\");\n      } else if (innerIndex === 3 && content != null) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: innerIndex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"img-fluid\",\n          src: createImage(content),\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }\n        }));\n      } else if (innerIndex === 4) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: innerIndex,\n          className: \"my-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }\n        }, content.map((text, index) => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"container\",\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"checkbox\",\n            name: index,\n            onChange: e => {\n              handleChange(e, question[0], text[0]);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 49\n            }\n          }), /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: index,\n            className: \"pl-1\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 49\n            }\n          }, \" \", text[1]));\n        }));\n      } else {\n        return null;\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Lead\\xE1s\"));\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/examination/RenderContent.js"],"names":["React","useState","useEffect","RenderContent","props","list","socket","answers","setAnswers","disable","setDisable","createImage","picture","arrayBufferView","Uint8Array","blob","Blob","type","urlCreator","window","URL","webkitURL","createObjectURL","handleChange","event","qId","aId","answersCopy","slice","target","checked","index","findIndex","value","id","push","answerIndex","splice","handleSubmit","preventDefault","length","alert","emit","exam","temp","forEach","question","answerObj","map","content","innerIndex","text","e"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nexport default function RenderContent(props){\r\n\r\n    const list = props.list\r\n    const socket = props.socket\r\n\r\n    const [answers, setAnswers] = useState([])\r\n    const [disable, setDisable] = useState(false)\r\n\r\n    function createImage(picture){\r\n        const arrayBufferView = new Uint8Array(picture)\r\n        const blob = new Blob([arrayBufferView], {type: 'image/jpeg'}) \r\n        const urlCreator = window.URL || window.webkitURL\r\n\r\n        return urlCreator.createObjectURL(blob)\r\n    }\r\n\r\n    function handleChange(event, qId, aId){\r\n        const answersCopy = answers.slice()\r\n        if(event.target.checked){\r\n            const index = answersCopy.findIndex(value => value.id === qId)\r\n            if(answersCopy[index].answers.findIndex(value => value === aId) === -1){\r\n                answersCopy[index].answers.push(aId)\r\n            }\r\n        }else{\r\n            const index = answersCopy.findIndex(value => value.id === qId)\r\n            if(index !== -1){\r\n                const answerIndex = answersCopy[index].answers.findIndex(value => value === aId)\r\n                if(answerIndex !== -1){\r\n                    answersCopy[index].answers.splice(answerIndex, 1)\r\n                }\r\n            }\r\n        }\r\n        setAnswers(answersCopy)\r\n    }\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault()\r\n        if(answers.length === 0){\r\n            alert('Még nem jelölt meg egy választ sem! Kérjük adjon meg legalább egyet!')\r\n        }else{\r\n            socket.emit('exam-finished', answers, props.exam)\r\n            setDisable(true)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const temp = []\r\n        list.forEach(question => {\r\n            const answerObj = {id: question[0], answers:[]}\r\n            temp.push(answerObj)\r\n        })\r\n        setAnswers(temp)\r\n\r\n        // eslint-disable-next-line\r\n    }, [list])\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {list.map((question, qId) => {\r\n                    return question.map((content, innerIndex) => {\r\n                        if(innerIndex === 1){\r\n                            return (\r\n                                <li key={innerIndex}>\r\n                                    <b><span>{qId+1}. </span></b> {content} ({question[2]} pont)\r\n                                </li>)\r\n                        }else if(innerIndex === 3 && content != null){\r\n                            return (\r\n                                <li key={innerIndex}>\r\n                                    <img className='img-fluid' src={createImage(content)} alt=''/>\r\n                                </li>\r\n                            )\r\n                        }else if(innerIndex === 4){\r\n                            return (\r\n                                <li key={innerIndex} className=\"my-3\">\r\n                                    {content.map((text, index) => {\r\n                                        return(\r\n                                            <div className=\"container\" key={index}>\r\n                                                <input type=\"checkbox\" name={index} onChange={e => {\r\n                                                    handleChange(e, question[0], text[0])\r\n                                                }}/>\r\n                                                <label htmlFor={index} className=\"pl-1\"> {text[1]}</label>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </li>\r\n                            )\r\n                        }else{\r\n                            return null\r\n                        }\r\n                    })\r\n                })}\r\n            </ul>\r\n            <button onClick={handleSubmit} disabled={disable}>Leadás</button>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}