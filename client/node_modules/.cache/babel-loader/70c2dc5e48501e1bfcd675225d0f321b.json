{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\learn\\\\Learn.js\";\nimport React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport socket from '../../SocketAPI';\nimport { Bounce } from 'react-reveal';\nexport default function Learn(props) {\n  const [exams, setExams] = useState([]);\n  useEffect(() => {\n    socket.connect();\n    socket.emit('exams-get-signal');\n    socket.on('exams-get-emitter', dbExams => {\n      if (dbExams) {\n        let examList = [];\n\n        if (JSON.stringify(exams) !== JSON.stringify(dbExams)) {\n          dbExams.forEach(exam => {\n            examList.push([exam[0], exam[1], exam[2], exam[3], exam[4]]);\n          });\n          setExams(examList);\n        }\n      } else {\n        setExams([]);\n      }\n    });\n    return () => socket.disconnect();\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container text-center p-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    id: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, exams.map((exam, index) => {\n    return /*#__PURE__*/React.createElement(Bounce, {\n      left: true,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card m-2 shadow text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }, exam[0]), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }, \"Megjegyz\\xE9s: \", exam[2] !== 'null' ? exam[2] : ' - '), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }, \"K\\xE9sz\\xFClt: \", exam[4]), /*#__PURE__*/React.createElement(NavLink, {\n      to: `/exams/learn/${exam[1]}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    }, \"Megtanulom!\")))));\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/learn/Learn.js"],"names":["React","useState","useEffect","NavLink","socket","Bounce","Learn","props","exams","setExams","connect","emit","on","dbExams","examList","JSON","stringify","forEach","exam","push","disconnect","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport socket from '../../SocketAPI'\r\n\r\nimport { Bounce } from 'react-reveal';\r\n\r\nexport default function Learn(props) {\r\n    \r\n    const [exams, setExams] = useState([])\r\n\r\n    useEffect(() => {\r\n        socket.connect()\r\n\r\n        socket.emit('exams-get-signal')\r\n\r\n        socket.on('exams-get-emitter', (dbExams) => {\r\n            if(dbExams){\r\n                let examList = []\r\n                \r\n                if(JSON.stringify(exams) !== JSON.stringify(dbExams)){\r\n                    dbExams.forEach((exam) => {\r\n                        examList.push([exam[0], exam[1], exam[2], exam[3], exam[4]])\r\n                    })\r\n                    setExams(examList)\r\n                }\r\n            }else{\r\n                setExams([])\r\n            }\r\n        })\r\n\r\n        return () => socket.disconnect()\r\n    })\r\n\r\n    return (\r\n        <div className=\"container text-center p-3 mb-3\">\r\n            <div className=\"container\" id=\"content\">\r\n                <div className=\"row\">\r\n                {exams.map((exam,index)=>{\r\n                    return(\r\n                        <Bounce left key={index}>\r\n                        <div className=\"card m-2 shadow text-center\">\r\n                            <div className=\"card-body\">\r\n                                <p className=\"card-text\">{exam[0]}</p>\r\n                                <p className=\"card-text\">Megjegyzés: {exam[2] !== 'null' ? exam[2] : ' - '}</p>\r\n                                <p className=\"card-text\">Készült: {exam[4]}</p>\r\n                                <NavLink to={`/exams/learn/${exam[1]}`}>\r\n                                    <button type=\"button\" className=\"btn btn-outline-primary\">\r\n                                        Megtanulom!\r\n                                    </button>\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n                        </Bounce>\r\n                    )\r\n                })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}