{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\learn\\\\ExamDocument.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport API from '../../BackendAPI';\nexport default function ExamDocument() {\n  const [examUrl, setExamUrl] = useState('/');\n  const [exam] = useState(useParams());\n  const [pageNum, setPageNum] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n  function onDocumentLoadSuccess({\n    pageCount\n  }) {\n    setPageNum(pageCount);\n  }\n\n  useEffect(() => {\n    API.get(`/exams/learn/${exam.examCode}`, {\n      responseType: 'blob'\n    }).then(result => {\n      const file = new Blob([result.data.document], {\n        type: 'application/pdf'\n      });\n      setExamUrl(URL.createObjectURL(file));\n      console.log(examUrl);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [pageNum]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Document, {\n    file: {\n      url: examUrl\n    },\n    onLoadSuccess: onDocumentLoadSuccess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Page, {\n    pageNumber: currentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Page \", currentPage, \" of \", pageNum));\n}","map":{"version":3,"sources":["C:/Users/MÃ¡rk/Documents/GitHub/jpskills/client/src/components/exams/learn/ExamDocument.js"],"names":["React","useState","useEffect","useParams","Document","Page","pdfjs","API","ExamDocument","examUrl","setExamUrl","exam","pageNum","setPageNum","currentPage","setCurrentPage","GlobalWorkerOptions","workerSrc","version","onDocumentLoadSuccess","pageCount","get","examCode","responseType","then","result","file","Blob","data","document","type","URL","createObjectURL","console","log","catch","err","url"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,SAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,KAAxB,QAAoC,WAApC;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,eAAe,SAASC,YAAT,GAAuB;AAElC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,GAAD,CAAtC;AACA,QAAM,CAACU,IAAD,IAAUV,QAAQ,CAACE,SAAS,EAAV,CAAxB;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,CAAD,CAA9C;AAEAK,EAAAA,KAAK,CAACU,mBAAN,CAA0BC,SAA1B,GAAuC,2CAA0CX,KAAK,CAACY,OAAQ,gBAA/F;;AAEA,WAASC,qBAAT,CAA+B;AAAEC,IAAAA;AAAF,GAA/B,EAA8C;AAC1CP,IAAAA,UAAU,CAACO,SAAD,CAAV;AACH;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,GAAG,CAACc,GAAJ,CAAS,gBAAeV,IAAI,CAACW,QAAS,EAAtC,EAAyC;AAACC,MAAAA,YAAY,EAAE;AAAf,KAAzC,EACCC,IADD,CACMC,MAAM,IAAI;AACZ,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,MAAM,CAACG,IAAP,CAAYC,QAAb,CAAT,EAAiC;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAjC,CAAb;AACApB,MAAAA,UAAU,CAACqB,GAAG,CAACC,eAAJ,CAAoBN,IAApB,CAAD,CAAV;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYzB,OAAZ;AACH,KALD,EAKG0B,KALH,CAKSC,GAAG,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KAPD;AAQH,GATQ,EASP,CAACxB,OAAD,CATO,CAAT;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE;AAACyB,MAAAA,GAAG,EAAE5B;AAAN,KADR;AAEE,IAAA,aAAa,EAAEU,qBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAEL,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAASA,WAAT,UAA0BF,OAA1B,CAPF,CADJ;AAWH","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport {Document, Page, pdfjs} from 'react-pdf'\r\n\r\nimport API from '../../BackendAPI'\r\n\r\nexport default function ExamDocument(){\r\n\r\n    const [examUrl, setExamUrl] = useState('/')\r\n    const [exam,] = useState(useParams())\r\n    const [pageNum, setPageNum] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\r\n\r\n    function onDocumentLoadSuccess({ pageCount }) {\r\n        setPageNum(pageCount)\r\n    }\r\n\r\n    useEffect(() => {\r\n        API.get(`/exams/learn/${exam.examCode}`, {responseType: 'blob'})\r\n        .then(result => {\r\n            const file = new Blob([result.data.document], {type: 'application/pdf'})\r\n            setExamUrl(URL.createObjectURL(file))\r\n            console.log(examUrl)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    },[pageNum])\r\n\r\n    return (\r\n        <div>\r\n          <Document\r\n            file={{url: examUrl}}\r\n            onLoadSuccess={onDocumentLoadSuccess}\r\n          >\r\n            <Page pageNumber={currentPage} />\r\n          </Document>\r\n          <p>Page {currentPage} of {pageNum}</p>\r\n        </div>\r\n      );\r\n}"]},"metadata":{},"sourceType":"module"}