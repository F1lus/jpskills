{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\modify\\\\ExamModify.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from '../../BackendAPI';\nexport default function ExamModify() {\n  // eslint-disable-next-line\n  const [examCode, setExamCode] = useState(useParams());\n  const [warning, setWarning] = useState(null);\n  const [examName, setExamName] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n\n  function changeAnswer(event, qIndex, aIndex) {\n    event.preventDefault();\n    let currentAnswer = answers[qIndex][aIndex];\n    const answersCopy = answers[qIndex].filter((_, index) => index !== aIndex);\n    setAnswers(answersCopy);\n  }\n\n  function renderQuestions() {\n    return questions.map((question, qIndex) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: qIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, question.name), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      }, \"Azonos\\xEDt\\xF3: \", question.id), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, \"Pontsz\\xE1m: \", question.points), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, \"A k\\xE9rd\\xE9shez tartoz\\xF3 v\\xE1laszok\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, renderAnswers(qIndex))), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, \"K\\xE9rd\\xE9s m\\xF3dos\\xEDt\\xE1sa\"), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, \"K\\xE9rd\\xE9s t\\xF6rl\\xE9se\"));\n    });\n  }\n\n  function renderAnswers(qIndex) {\n    if (answers[qIndex].length !== 0) {\n      return answers[qIndex].map((answer, aIndex) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: aIndex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }\n        }, \"V\\xE1lasz azonos\\xEDt\\xF3: \", answer.id), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }\n        }, answer.text), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }\n        }, answer.correct ? \"Helyes\" : \"Nem helyes\")), /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: e => changeAnswer(e, qIndex, aIndex),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }\n        }, \"V\\xE1lasz m\\xF3dos\\xEDt\\xE1sa\")), /*#__PURE__*/React.createElement(\"button\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }\n        }, \"V\\xE1lasz t\\xF6rl\\xE9se\"));\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 20\n        }\n      }, \"V\\xE1lasz hozz\\xE1ad\\xE1sa\");\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"h\");\n    API.get(`/exams/${examCode.examName}`).then(result => {\n      if (result) {\n        setExamName(result.data.name);\n\n        if (result.data.questions) {\n          setQuestions(result.data.questions);\n          result.data.questions.forEach(value => {\n            setAnswers(answers.push(value.answers));\n          });\n        } else {\n          setWarning('Nincsenek megjeleníthető kérdések.');\n        }\n      }\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, examName), questions.length !== 0 ? renderQuestions() : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 59\n    }\n  }, warning), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"K\\xE9rd\\xE9s hozz\\xE1ad\\xE1sa\"));\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/modify/ExamModify.js"],"names":["React","useState","useEffect","useParams","API","ExamModify","examCode","setExamCode","warning","setWarning","examName","setExamName","questions","setQuestions","answers","setAnswers","changeAnswer","event","qIndex","aIndex","preventDefault","currentAnswer","answersCopy","filter","_","index","renderQuestions","map","question","name","id","points","renderAnswers","length","answer","text","correct","e","console","log","get","then","result","data","forEach","value","push","catch","err"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport API from '../../BackendAPI'\r\n\r\nexport default function ExamModify(){\r\n\r\n    // eslint-disable-next-line\r\n    const [examCode, setExamCode] = useState(useParams())\r\n\r\n    const [warning, setWarning] = useState(null)\r\n    const [examName, setExamName] = useState(null)\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState([])\r\n\r\n    function changeAnswer(event, qIndex, aIndex){\r\n        event.preventDefault()\r\n        let currentAnswer = answers[qIndex][aIndex]\r\n        \r\n        const answersCopy = answers[qIndex].filter((_, index) => index !== aIndex)\r\n        setAnswers(answersCopy)\r\n    }\r\n\r\n    function renderQuestions(){\r\n        return questions.map((question, qIndex) => {\r\n            return <div key={qIndex}>\r\n                <h3>{question.name}</h3>\r\n                <ul>\r\n                    <li>Azonosító: {question.id}</li>\r\n                    <li>Pontszám: {question.points}</li>\r\n                    <li>A kérdéshez tartozó válaszok</li>\r\n                    <li>{renderAnswers(qIndex)}</li>\r\n                </ul>\r\n                <button>Kérdés módosítása</button>\r\n                <button>Kérdés törlése</button>\r\n            </div>\r\n        })\r\n    }\r\n\r\n    function renderAnswers(qIndex){\r\n        if(answers[qIndex].length !== 0){\r\n            return answers[qIndex].map((answer, aIndex) => {\r\n                return <div key={aIndex}>\r\n                    <ul>\r\n                        <li>Válasz azonosító: {answer.id}</li>\r\n                        <li>{answer.text}</li>\r\n                        <li>{answer.correct ? \"Helyes\" : \"Nem helyes\"}</li>\r\n                    </ul>\r\n                    <form onSubmit={e => changeAnswer(e, qIndex, aIndex)}>\r\n                        <button>Válasz módosítása</button>\r\n                    </form>\r\n                    <button>Válasz törlése</button>\r\n                </div>\r\n            })\r\n        }else{\r\n            return <button>Válasz hozzáadása</button>\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"h\")\r\n        API.get(`/exams/${examCode.examName}`)\r\n            .then(result => {\r\n                if(result){\r\n                    setExamName(result.data.name)\r\n                    if(result.data.questions){\r\n                        setQuestions(result.data.questions)\r\n                        result.data.questions.forEach(value => {\r\n                            setAnswers(answers.push(value.answers))\r\n                        })\r\n                    }else{\r\n                        setWarning('Nincsenek megjeleníthető kérdések.')\r\n                    }\r\n                }\r\n            }).catch(err => console.log(err))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>{examName}</h1>\r\n            \r\n            {questions.length !== 0 ? renderQuestions() : <p>{warning}</p>}\r\n\r\n            <button>Kérdés hozzáadása</button>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}