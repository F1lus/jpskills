{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\modify\\\\Modifier.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from '../../BackendAPI';\nexport default function Modifier(props) {\n  const param = useParams();\n  const [type, setType] = useState(null);\n  const [index] = useState(props.index);\n  const [value, setValue] = useState(props.value || false);\n  const [isAnswer] = useState(props.isAnswer || false);\n  const [disableButton, setDisableButton] = useState(props.disable || false);\n  useEffect(() => {\n    let valueType = typeof props.value;\n\n    if (valueType === 'number' || valueType === 'bigint') {\n      setType('number');\n    } else if (valueType === 'boolean') {\n      setType('bool');\n    } else if (valueType === 'string') {\n      setType('text');\n    }\n  }, [props.value, index]);\n\n  function handleChange(event) {\n    if (event.target.value === 'Állapotváltás...') {\n      return;\n    }\n\n    setValue(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setDisableButton(true);\n\n    if (index && value) {\n      if (!isAnswer) {\n        API.post(`/exams/modify/${param.examName}`, {\n          questionId: index,\n          value: value,\n          isNumber: type === 'number'\n        }).then(response => {\n          if (response) {\n            props.socket.emit('exam-modified');\n          }\n        }).catch(err => {\n          setDisableButton(false);\n          console.log(err);\n        });\n      } else {\n        API.post(`/exams/modify/${param.examName}`, {\n          answerId: index,\n          value: value,\n          isBoolean: type === 'bool'\n        }).then(response => {\n          if (response) {\n            props.socket.emit('exam-modified');\n          }\n        }).catch(err => {\n          setDisableButton(false);\n          console.log(err);\n        });\n      }\n    }\n  }\n\n  function renderInput() {\n    if (type === 'number' || type === 'text') {\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group m-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: \"modify\",\n        type: type || 'text',\n        value: value || '',\n        onChange: handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"modify\",\n        className: \"label-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"content-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, type === 'number' ? \"Pontszám\" : \"Szöveg\"))), /*#__PURE__*/React.createElement(\"button\", {\n        disabled: disableButton,\n        className: \"btn btn-warning m-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, \"M\\xF3dos\\xEDt\\xE1s!\"));\n    } else if (type === 'bool') {\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        name: \"modify\",\n        className: \"rounded pl-3 w-25\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, \"\\xC1llapotv\\xE1lt\\xE1s...\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, \"Helyes\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, \"Helytelen\")), /*#__PURE__*/React.createElement(\"button\", {\n        disabled: disableButton,\n        className: \"btn btn-warning m-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, \"M\\xF3dos\\xEDt\\xE1s!\"), /*#__PURE__*/React.createElement(\"hr\", {\n        id: \"valaszelvalaszto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, renderInput());\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/modify/Modifier.js"],"names":["React","useState","useEffect","useParams","API","Modifier","props","param","type","setType","index","value","setValue","isAnswer","disableButton","setDisableButton","disable","valueType","handleChange","event","target","handleSubmit","preventDefault","post","examName","questionId","isNumber","then","response","socket","emit","catch","err","console","log","answerId","isBoolean","renderInput"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport API from '../../BackendAPI'\r\n\r\nexport default function Modifier(props){\r\n\r\n    const param = useParams()\r\n\r\n\r\n    const [type, setType] = useState(null)\r\n    const [index,] = useState(props.index)\r\n    const [value, setValue] = useState(props.value || false)\r\n    const [isAnswer,] = useState(props.isAnswer || false)\r\n    const [disableButton, setDisableButton] = useState(props.disable || false)\r\n\r\n    useEffect(() => {\r\n        let valueType = typeof props.value\r\n        if(valueType === 'number' || valueType === 'bigint'){\r\n            setType('number')\r\n        }else if(valueType === 'boolean'){\r\n            setType('bool')\r\n        }else if(valueType === 'string'){\r\n            setType('text')\r\n        }\r\n    },[props.value, index])\r\n\r\n    function handleChange(event){\r\n        if(event.target.value === 'Állapotváltás...'){\r\n            return\r\n        }\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault()\r\n        setDisableButton(true)\r\n        if(index && value){\r\n            if(!isAnswer){\r\n                API.post(`/exams/modify/${param.examName}`, \r\n                    {questionId: index, value: value, isNumber: type === 'number'})\r\n                .then(response  => {\r\n                    if(response){\r\n                        props.socket.emit('exam-modified')\r\n                    }\r\n                }).catch(err => {\r\n                    setDisableButton(false)\r\n                    console.log(err)\r\n                })\r\n            }else{\r\n                API.post(`/exams/modify/${param.examName}`, \r\n                    {answerId: index, value: value, isBoolean: type === 'bool'})\r\n                .then(response  => {\r\n                    if(response){\r\n                        props.socket.emit('exam-modified')\r\n                    }\r\n                }).catch(err => {\r\n                    setDisableButton(false)\r\n                    console.log(err)\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    function renderInput(){\r\n        if(type === 'number' || type === 'text'){\r\n            return (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group m-auto\">\r\n                        <input name='modify' type={type || 'text'} value={value || ''} onChange={handleChange} required/>\r\n                        <label htmlFor=\"modify\" className=\"label-name\">\r\n                            <span className=\"content-name\">\r\n                                {type === 'number' ? \"Pontszám\":\"Szöveg\"}\r\n                            </span>\r\n                        </label>\r\n                    </div>\r\n                    <button disabled={disableButton} className=\"btn btn-warning m-2\">Módosítás!</button>\r\n                </form>)\r\n        }else if(type === 'bool'){\r\n            return (\r\n                <form onSubmit={handleSubmit}>\r\n                    <select name='modify' className=\"rounded pl-3 w-25\" onChange={handleChange}>\r\n                        <option value={null}>Állapotváltás...</option>\r\n                        <option value={1}>Helyes</option>\r\n                        <option value={0}>Helytelen</option>\r\n                    </select>\r\n                    <button disabled={disableButton} className=\"btn btn-warning m-2\">Módosítás!</button>\r\n                    <hr id=\"valaszelvalaszto\"/>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        {renderInput()}\r\n    </div>)\r\n}"]},"metadata":{},"sourceType":"module"}