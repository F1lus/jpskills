{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\modify\\\\AddQuestion.js\";\nimport React, { useState, useEffect } from 'react';\nexport default function AddQuestion(props) {\n  const [renderedQuestions, setRenderedQuestions] = useState([]);\n  const [question, setQuestion] = useState(null);\n  const [points, setPoints] = useState(null);\n\n  function handleChange(event) {\n    switch (event.target.name) {\n      case 'question':\n        setQuestion(event.target.value);\n        break;\n\n      case 'points':\n        setPoints(event.target.value);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  useEffect(() => {\n    let result = [];\n\n    for (let i = 0; i < props.count; i++) {\n      result.push( /*#__PURE__*/React.createElement(\"form\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"question\",\n        value: question || '',\n        placeholder: \"A k\\xE9rd\\xE9s sz\\xF6vege\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        name: \"points\",\n        value: points || '',\n        placeholder: \"Pontsz\\xE1m\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Felt\\xF6lt\\xE9s\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      })));\n    }\n\n    setRenderedQuestions(result);\n  }, [props.count]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, renderedQuestions.length === 0 ? null : renderedQuestions.map(value => {\n    return value;\n  }));\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/modify/AddQuestion.js"],"names":["React","useState","useEffect","AddQuestion","props","renderedQuestions","setRenderedQuestions","question","setQuestion","points","setPoints","handleChange","event","target","name","value","result","i","count","push","length","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AAEtC,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CL,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;;AAEA,WAASU,YAAT,CAAsBC,KAAtB,EAA4B;AACxB,YAAOA,KAAK,CAACC,MAAN,CAAaC,IAApB;AACI,WAAK,UAAL;AACIN,QAAAA,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaE,KAAd,CAAX;AACA;;AACJ,WAAK,QAAL;AACIL,QAAAA,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaE,KAAd,CAAT;AACA;;AACJ;AACI;AARR;AAUH;;AAEDb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,MAAM,GAAG,EAAb;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGb,KAAK,CAACc,KAAzB,EAAgCD,CAAC,EAAjC,EAAoC;AAChCD,MAAAA,MAAM,CAACG,IAAP,eACI;AAAM,QAAA,GAAG,EAAEF,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AACI,QAAA,KAAK,EAAEV,QAAQ,IAAI,EADvB;AAC2B,QAAA,WAAW,EAAC,2BADvC;AAC0D,QAAA,QAAQ,EAAEI,YADpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAGI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,QAA1B;AACI,QAAA,KAAK,EAAEF,MAAM,IAAI,EADrB;AACyB,QAAA,WAAW,EAAC,aADrC;AACgD,QAAA,QAAQ,EAAEE,YAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,eAKI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ;AASH;;AACDL,IAAAA,oBAAoB,CAACU,MAAD,CAApB;AACH,GAdQ,EAcN,CAACZ,KAAK,CAACc,KAAP,CAdM,CAAT;AAgBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,iBAAiB,CAACe,MAAlB,KAA6B,CAA7B,GAAiC,IAAjC,GAAwCf,iBAAiB,CAACgB,GAAlB,CAAsBN,KAAK,IAAI;AACrE,WAAOA,KAAP;AACH,GAFyC,CAD7C,CADJ;AAOH","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nexport default function AddQuestion(props){\r\n\r\n    const [renderedQuestions, setRenderedQuestions] = useState([])\r\n    const [question, setQuestion] = useState(null)\r\n    const [points, setPoints] = useState(null)\r\n\r\n    function handleChange(event){\r\n        switch(event.target.name){\r\n            case 'question':\r\n                setQuestion(event.target.value)\r\n                break\r\n            case 'points':\r\n                setPoints(event.target.value)\r\n                break\r\n            default:\r\n                return\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let result = []\r\n        for(let i = 0; i < props.count; i++){\r\n            result.push(\r\n                <form key={i}>\r\n                    <input type='text' name='question' \r\n                        value={question || ''} placeholder='A kérdés szövege' onChange={handleChange}/>\r\n                    <input type='number' name='points' \r\n                        value={points || ''} placeholder='Pontszám' onChange={handleChange}/>\r\n                    <input type='submit' value='Feltöltés' />\r\n                </form>\r\n            )\r\n        }\r\n        setRenderedQuestions(result)\r\n    }, [props.count])\r\n\r\n    return (\r\n        <div>\r\n           { renderedQuestions.length === 0 ? null : renderedQuestions.map(value => {\r\n               return value\r\n           })} \r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}