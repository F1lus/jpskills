{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\modify\\\\ExamModify.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from '../../BackendAPI';\nexport default function ExamModify() {\n  const examCode = useParams();\n  var questionList = [];\n  const [warning, setWarning] = useState(null);\n  const [examName, setExamName] = useState(null);\n  const [questions, setQuestions] = useState(null);\n  useEffect(() => {\n    API.get(`/exams/${examCode.examName}`).then(result => {\n      if (!result) {\n        setWarning('A vizsgához nem tartoznak még kérdések.');\n      } else {\n        setExamName(result.data.examName);\n        result.data.questions.forEach(question => {\n          let answerList = [];\n          question[0].forEach(answer => {\n            let answers = {\n              id: answer[0],\n              answer: answer[1],\n              correct: answer[2]\n            };\n            answerList.push(answers);\n          });\n          let questionObj = {\n            question_id: question[1],\n            exam_itemcode: question[2],\n            question: question[3],\n            points: question[4],\n            answers: answerList,\n            picture: question[5]\n          };\n          questionList.push(questionObj);\n        });\n        setQuestions(questionList);\n      }\n\n      console.log(examName);\n      console.log(questions);\n    }).catch(err => console.log(err));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, examName));\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/modify/ExamModify.js"],"names":["React","useState","useEffect","useParams","API","ExamModify","examCode","questionList","warning","setWarning","examName","setExamName","questions","setQuestions","get","then","result","data","forEach","question","answerList","answer","answers","id","correct","push","questionObj","question_id","exam_itemcode","points","picture","console","log","catch","err"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,eAAe,SAASC,UAAT,GAAqB;AAEhC,QAAMC,QAAQ,GAAGH,SAAS,EAA1B;AACA,MAAII,YAAY,GAAG,EAAnB;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,GAAG,CAACU,GAAJ,CAAS,UAASR,QAAQ,CAACI,QAAS,EAApC,EACKK,IADL,CACUC,MAAM,IAAI;AACZ,UAAG,CAACA,MAAJ,EAAW;AACPP,QAAAA,UAAU,CAAC,yCAAD,CAAV;AACH,OAFD,MAEK;AACDE,QAAAA,WAAW,CAACK,MAAM,CAACC,IAAP,CAAYP,QAAb,CAAX;AACAM,QAAAA,MAAM,CAACC,IAAP,CAAYL,SAAZ,CAAsBM,OAAtB,CAA+BC,QAAD,IAAc;AACxC,cAAIC,UAAU,GAAG,EAAjB;AACAD,UAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYD,OAAZ,CAAqBG,MAAD,IAAY;AAC5B,gBAAIC,OAAO,GAAG;AACVC,cAAAA,EAAE,EAAEF,MAAM,CAAC,CAAD,CADA;AAEVA,cAAAA,MAAM,EAAEA,MAAM,CAAC,CAAD,CAFJ;AAGVG,cAAAA,OAAO,EAAEH,MAAM,CAAC,CAAD;AAHL,aAAd;AAKAD,YAAAA,UAAU,CAACK,IAAX,CAAgBH,OAAhB;AACH,WAPD;AASA,cAAII,WAAW,GAAG;AACdC,YAAAA,WAAW,EAAER,QAAQ,CAAC,CAAD,CADP;AAEdS,YAAAA,aAAa,EAAET,QAAQ,CAAC,CAAD,CAFT;AAGdA,YAAAA,QAAQ,EAAEA,QAAQ,CAAC,CAAD,CAHJ;AAIdU,YAAAA,MAAM,EAAEV,QAAQ,CAAC,CAAD,CAJF;AAKdG,YAAAA,OAAO,EAAEF,UALK;AAMdU,YAAAA,OAAO,EAAEX,QAAQ,CAAC,CAAD;AANH,WAAlB;AASAZ,UAAAA,YAAY,CAACkB,IAAb,CAAkBC,WAAlB;AACH,SArBD;AAsBAb,QAAAA,YAAY,CAACN,YAAD,CAAZ;AACH;;AACDwB,MAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAYpB,SAAZ;AACH,KAhCL,EAgCOqB,KAhCP,CAgCaC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAhCpB;AAiCH,GAlCQ,CAAT;AAoCA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKxB,QAAL,CADJ,CADJ;AAOH","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport API from '../../BackendAPI'\r\n\r\nexport default function ExamModify(){\r\n\r\n    const examCode = useParams()\r\n    var questionList = []\r\n\r\n    const [warning, setWarning] = useState(null)\r\n    const [examName, setExamName] = useState(null)\r\n    const [questions, setQuestions] = useState(null)\r\n\r\n    useEffect(() => {\r\n        API.get(`/exams/${examCode.examName}`)\r\n            .then(result => {\r\n                if(!result){\r\n                    setWarning('A vizsgához nem tartoznak még kérdések.')\r\n                }else{\r\n                    setExamName(result.data.examName)\r\n                    result.data.questions.forEach((question) => {\r\n                        let answerList = []\r\n                        question[0].forEach((answer) => {\r\n                            let answers = {\r\n                                id: answer[0],\r\n                                answer: answer[1],\r\n                                correct: answer[2]\r\n                            }\r\n                            answerList.push(answers)\r\n                        })\r\n\r\n                        let questionObj = {\r\n                            question_id: question[1],\r\n                            exam_itemcode: question[2],\r\n                            question: question[3],\r\n                            points: question[4],\r\n                            answers: answerList,\r\n                            picture: question[5]\r\n                        }\r\n\r\n                        questionList.push(questionObj)\r\n                    })\r\n                    setQuestions(questionList)\r\n                }\r\n                console.log(examName)\r\n                console.log(questions)\r\n            }).catch(err => console.log(err))\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h1>{examName}</h1>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}