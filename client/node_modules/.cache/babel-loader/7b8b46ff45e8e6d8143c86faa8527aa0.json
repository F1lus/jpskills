{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\modify\\\\AddAnswer.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from '../../BackendAPI';\nexport default function AddAnswer(props) {\n  const [param] = useState(useParams());\n  const [renderedAnswers, setRenderedAnswers] = useState([]);\n  const [answer, setAnswer] = useState(null);\n  const [isCorrect, setCorrect] = useState(null);\n\n  function handleChange(event) {\n    switch (event.target.name) {\n      case 'answer':\n        setAnswer(event.target.value);\n        console.log(event.target.value);\n        break;\n\n      case 'value':\n        setCorrect(event.target.value);\n        console.log(event.target.value);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(props.questionId + ' ' + answer + ' ' + isCorrect);\n\n    if (props.questionId && answer && isCorrect != null) {\n      console.log('ddq');\n      API.post(`/exams/modify/${param.examName}`, {\n        questionId: props.questionId,\n        answerText: answer,\n        value: isCorrect\n      }).then(result => {});\n    }\n  }\n\n  useEffect(() => {\n    let result = [];\n\n    for (let i = 0; i < props.count; i++) {\n      result.push( /*#__PURE__*/React.createElement(\"form\", {\n        key: i,\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"answer\",\n        value: answer || '',\n        placeholder: \"A k\\xE9rd\\xE9s sz\\xF6vege\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"select\", {\n        name: \"value\",\n        className: \"rounded pl-2 w-25\",\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        defaultValue: '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, \"V\\xE1lasszon \\xE9rt\\xE9ket!\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, \"Helyes\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, \"Helytelen\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Felt\\xF6lt\\xE9s\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      })));\n    }\n\n    setRenderedAnswers(result);\n  }, [props.count]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, renderedAnswers.length === 0 ? null : renderedAnswers.map(value => {\n    return value;\n  }));\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/modify/AddAnswer.js"],"names":["React","useState","useEffect","useParams","API","AddAnswer","props","param","renderedAnswers","setRenderedAnswers","answer","setAnswer","isCorrect","setCorrect","handleChange","event","target","name","value","console","log","handleSubmit","preventDefault","questionId","post","examName","answerText","then","result","i","count","push","length","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport API from '../../BackendAPI'\r\n\r\nexport default function AddAnswer(props){\r\n\r\n    const [param,] = useState(useParams())\r\n    const [renderedAnswers, setRenderedAnswers] = useState([])\r\n    const [answer, setAnswer] = useState(null)\r\n    const [isCorrect, setCorrect] = useState(null)\r\n\r\n    function handleChange(event){\r\n        switch(event.target.name){\r\n            case 'answer':\r\n                setAnswer(event.target.value)\r\n                console.log(event.target.value)\r\n                break\r\n            case 'value':\r\n                setCorrect(event.target.value)\r\n                console.log(event.target.value)\r\n                break\r\n            default:\r\n                return\r\n        }\r\n    }\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault()\r\n        console.log(props.questionId +' '+answer+' '+isCorrect)\r\n        if(props.questionId && answer && isCorrect != null){\r\n            console.log('ddq')\r\n            API.post(`/exams/modify/${param.examName}`, \r\n                {questionId: props.questionId, answerText: answer, value: isCorrect})\r\n            .then(result => {\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let result = []\r\n        for(let i = 0; i < props.count; i++){\r\n            result.push(\r\n                <form key={i} onSubmit={handleSubmit}>\r\n                    <input type='text' name='answer' \r\n                        value={answer || ''} placeholder='A kérdés szövege' onChange={handleChange}/>\r\n                    <select name='value' className=\"rounded pl-2 w-25\" onChange={handleChange}>\r\n                        <option defaultValue={''}>Válasszon értéket!</option>\r\n                        <option value={true}>Helyes</option>\r\n                        <option value={false}>Helytelen</option>\r\n                    </select>\r\n                    <input type='submit' value='Feltöltés' />\r\n                </form>\r\n            )\r\n        }\r\n        setRenderedAnswers(result)\r\n    }, [props.count])\r\n\r\n    return (\r\n        <div>\r\n           { renderedAnswers.length === 0 ? null : renderedAnswers.map(value => {\r\n               return value\r\n           })} \r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}