{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\modify\\\\ExamModify.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from '../../BackendAPI';\nexport default function ExamModify() {\n  const examCode = useParams();\n  const [warning, setWarning] = useState(null);\n  const [examName, setExamName] = useState(null);\n  const [questions, setQuestions] = useState([]);\n\n  function fetchData() {\n    API.get(`/exams/${examCode.examName}`).then(result => {\n      if (result) {\n        setExamName(result.data.name);\n\n        if (result.data.questions) {\n          setQuestions(result.data.questions);\n        } else {\n          setWarning('Nincsenek megjeleníthető kérdések.');\n        }\n      }\n    }).catch(err => console.log(err));\n  }\n\n  function renderQuestions() {\n    return questions.map((question, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, question.name), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, \"Azonos\\xEDt\\xF3: \", question.id), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, \"Pontsz\\xE1m: \", question.points), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, \"A k\\xE9rd\\xE9shez tartoz\\xF3 v\\xE1laszok\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, question.answers.map((answer, index) => {\n        return /*#__PURE__*/React.createElement(\"ul\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 32\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }\n        }, \"K\\xE9rd\\xE9s azonos\\xEDt\\xF3: \", answer.id), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }\n        }, answer.text), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }\n        }, answer.correct ? \"Helyes\" : \"Nem helyes\"));\n      }))));\n    });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, examName), questions.length !== 0 ? renderQuestions() : warning, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"K\\xE9rd\\xE9s hozz\\xE1ad\\xE1sa, vagy m\\xF3dos\\xEDt\\xE1sa\"));\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/modify/ExamModify.js"],"names":["React","useState","useEffect","useParams","API","ExamModify","examCode","warning","setWarning","examName","setExamName","questions","setQuestions","fetchData","get","then","result","data","name","catch","err","console","log","renderQuestions","map","question","index","id","points","answers","answer","text","correct","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport API from '../../BackendAPI'\r\n\r\nexport default function ExamModify(){\r\n\r\n    const examCode = useParams()\r\n\r\n    const [warning, setWarning] = useState(null)\r\n    const [examName, setExamName] = useState(null)\r\n    const [questions, setQuestions] = useState([])\r\n\r\n    function fetchData(){\r\n        API.get(`/exams/${examCode.examName}`)\r\n            .then(result => {\r\n                if(result){\r\n                    setExamName(result.data.name)\r\n                    if(result.data.questions){\r\n                        setQuestions(result.data.questions)\r\n                    }else{\r\n                        setWarning('Nincsenek megjeleníthető kérdések.')\r\n                    }\r\n                }\r\n            }).catch(err => console.log(err))\r\n    }\r\n\r\n    function renderQuestions(){\r\n        return questions.map((question, index) => {\r\n            return <div key={index}>\r\n                <h3>{question.name}</h3>\r\n                <ul>\r\n                    <li>Azonosító: {question.id}</li>\r\n                    <li>Pontszám: {question.points}</li>\r\n                    <li>A kérdéshez tartozó válaszok</li>\r\n                    <li>{question.answers.map((answer, index) => {\r\n                        return <ul key={index}>\r\n                            <li>Kérdés azonosító: {answer.id}</li>\r\n                            <li>{answer.text}</li>\r\n                            <li>{answer.correct ? \"Helyes\" : \"Nem helyes\"}</li>\r\n                        </ul>\r\n                    })}</li>\r\n                </ul>\r\n            </div>\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <h1>{examName}</h1>\r\n            \r\n            {questions.length !== 0 ? renderQuestions() : warning}\r\n            <br/>\r\n            <button>Kérdés hozzáadása, vagy módosítása</button>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}