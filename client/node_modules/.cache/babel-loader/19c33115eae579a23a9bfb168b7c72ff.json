{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\modify\\\\ExamModify.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ListManager from './ListManager';\nimport API from '../../BackendAPI';\nexport default function ExamModify() {\n  // eslint-disable-next-line\n  const [examCode, setExamCode] = useState(useParams());\n  const [warning, setWarning] = useState(null);\n  const [examName, setExamName] = useState(null);\n  const [questions, setQuestions] = useState(null);\n\n  function renderQuestions() {\n    return questions.map((question, qIndex) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: qIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, question.name), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }\n      }, \"Azonos\\xEDt\\xF3: \", question.id), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, \"Pontsz\\xE1m: \", question.points), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, \"A k\\xE9rd\\xE9shez tartoz\\xF3 v\\xE1laszok\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }, renderAnswers(question.answers, qIndex))), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, \"K\\xE9rd\\xE9s t\\xF6rl\\xE9se\"));\n    });\n  }\n\n  function removeAnswer(event, questionId, answerId) {\n    event.preventDefault();\n    let questionsCopy = questions;\n\n    if (questionsCopy[questionId] && questionsCopy[questionId].answers.length !== 0) {\n      questionsCopy[questionId].answers.splice(questionsCopy[questionId].answers[answerId], 1);\n      setQuestions(questionsCopy);\n    }\n  }\n\n  function renderAnswers(answers, qIndex) {\n    if (answers.length !== 0) {\n      return answers.map((answer, aIndex) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: aIndex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }\n        }, \"V\\xE1lasz azonos\\xEDt\\xF3: \", answer.id), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }\n        }, answer.text), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }\n        }, answer.correct ? \"Helyes\" : \"Nem helyes\")), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: e => removeAnswer(e, qIndex, aIndex),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }\n        }, \"V\\xE1lasz t\\xF6rl\\xE9se\"));\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }\n      }, \"V\\xE1lasz hozz\\xE1ad\\xE1sa\");\n    }\n  }\n\n  useEffect(() => {\n    API.get(`/exams/${examCode.examName}`).then(result => {\n      if (result) {\n        setExamName(result.data.name);\n\n        if (result.data.questions) {\n          let list = [];\n          result.data.questions.forEach(question => {\n            let answers = [];\n            question.answers.forEach(answer => {\n              answers.push(answer.id, answer.text, answer.correct);\n            });\n            list.push([question.id, question.name, question.points, 'A kérdéshez tartozó válaszok', answers]);\n          });\n          console.log(list);\n          setQuestions(list);\n          console.log(questions);\n        } else {\n          setWarning('Nincsenek megjeleníthető kérdések.');\n        }\n      }\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, examName), /*#__PURE__*/React.createElement(ListManager, {\n    list: questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"K\\xE9rd\\xE9s hozz\\xE1ad\\xE1sa\"));\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/modify/ExamModify.js"],"names":["React","useState","useEffect","useParams","ListManager","API","ExamModify","examCode","setExamCode","warning","setWarning","examName","setExamName","questions","setQuestions","renderQuestions","map","question","qIndex","name","id","points","renderAnswers","answers","removeAnswer","event","questionId","answerId","preventDefault","questionsCopy","length","splice","answer","aIndex","text","correct","e","get","then","result","data","list","forEach","push","console","log","catch","err"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport ListManager from './ListManager'\r\n\r\nimport API from '../../BackendAPI'\r\n\r\nexport default function ExamModify(){\r\n\r\n    // eslint-disable-next-line\r\n    const [examCode, setExamCode] = useState(useParams())\r\n\r\n    const [warning, setWarning] = useState(null)\r\n    const [examName, setExamName] = useState(null)\r\n    const [questions, setQuestions] = useState(null)\r\n\r\n    function renderQuestions(){\r\n        return questions.map((question, qIndex) => {\r\n            return <div key={qIndex}>\r\n                <h3>{question.name}</h3>\r\n                <ul>\r\n                    <li>Azonosító: {question.id}</li>\r\n                    <li>Pontszám: {question.points}</li>\r\n                    <li>A kérdéshez tartozó válaszok</li>\r\n                    <li>{renderAnswers(question.answers, qIndex)}</li>\r\n                </ul>\r\n                <button>Kérdés törlése</button>\r\n            </div>\r\n        })\r\n    }\r\n\r\n    function removeAnswer(event, questionId, answerId){\r\n        event.preventDefault()\r\n        let questionsCopy = questions\r\n        if(questionsCopy[questionId] && questionsCopy[questionId].answers.length !== 0){\r\n            questionsCopy[questionId].answers.splice(questionsCopy[questionId].answers[answerId], 1)\r\n            setQuestions(questionsCopy)\r\n        }\r\n    }\r\n\r\n    function renderAnswers(answers, qIndex){\r\n        if(answers.length !== 0){\r\n            return answers.map((answer, aIndex) => {\r\n                \r\n                return <div key={aIndex}>\r\n                    <ul>\r\n                        <li>Válasz azonosító: {answer.id}</li>\r\n                        <li>{answer.text}</li>\r\n                        <li>{answer.correct ? \"Helyes\" : \"Nem helyes\"}</li>\r\n                    </ul>\r\n                    <button onClick={e => removeAnswer(e, qIndex, aIndex)}>Válasz törlése</button>\r\n                </div>    \r\n            })\r\n        }else{\r\n            return <button>Válasz hozzáadása</button>\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        API.get(`/exams/${examCode.examName}`)\r\n            .then(result => {\r\n                if(result){\r\n                    setExamName(result.data.name)\r\n                    if(result.data.questions){\r\n                        let list = []\r\n                        result.data.questions.forEach(question => {\r\n                            let answers = []\r\n                            question.answers.forEach(answer => {\r\n                                answers.push(answer.id, answer.text, answer.correct)\r\n                            })\r\n                            list.push([question.id, question.name, question.points, \r\n                                'A kérdéshez tartozó válaszok', answers])\r\n                        })\r\n                        console.log(list)\r\n                        setQuestions(list)\r\n                        console.log(questions)\r\n                    }else{\r\n                        setWarning('Nincsenek megjeleníthető kérdések.')\r\n                    }\r\n                }\r\n            }).catch(err => console.log(err))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>{examName}</h1>\r\n\r\n            <ListManager list={questions} />\r\n\r\n            <button>Kérdés hozzáadása</button>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}