{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\modify\\\\ExamModify.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ListManager from './ListManager';\nimport API from '../../BackendAPI';\nimport AddQuestion from './AddQuestion';\nexport default function ExamModify() {\n  const [examCode] = useState(useParams());\n  const [warning, setWarning] = useState(null);\n  const [examProps, setExamProps] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [maxPoints, setMaxPoints] = useState(0);\n  const [newQuestionCount, setNewQuestionCount] = useState(0);\n  const [modifyResult, setModifyResult] = useState(null);\n  useEffect(() => {\n    API.get(`/exams/${examCode.examName}`).then(result => {\n      if (result) {\n        if (result.data.questions) {\n          let list = [];\n          result.data.questions.forEach(question => {\n            let answers = [];\n            question.answers.forEach(answer => {\n              answers.push([answer.id, answer.text, answer.correct]);\n            });\n            setMaxPoints(points => points + question.points);\n            list.push([question.id, question.name, question.points, answers]);\n          });\n          setQuestions(list);\n        } else {\n          setQuestions([]);\n          setWarning('Nincsenek megjeleníthető kérdések.');\n        }\n\n        setExamProps([result.data.name, result.data.notes, result.data.active, result.data.points]);\n      }\n    }).catch(err => console.log(err));\n  }, [examCode.examName]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    /*if(examName != null){\r\n        API.post(`/exams/modify/${examCode.examName}`, {examName: examName})\r\n        .then(response => {\r\n            if(response){\r\n                setModifyResult(response.data.updated)\r\n            }\r\n        }).catch(err => console.log(err))\r\n    }*/\n  }\n\n  function handleChange(event) {\n    switch (event.target.name) {\n      case 'examName':\n        setExamProps(props => props.splice(0, 1, event.target.value));\n        break;\n\n      case 'examNotes':\n        setExamProps(props => props[1] = event.target.value);\n        break;\n\n      case 'examStatus':\n        setExamProps(props => props[2] = event.target.value);\n        break;\n\n      case 'examMinPoints':\n        setExamProps(props => {\n          if (event.target.value > maxPoints) {\n            props[3] = maxPoints;\n          } else if (event.target.value < 0) {\n            props[3] = 0;\n          } else {\n            props[3] = event.target.value;\n          }\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function increateCount(event) {\n    event.preventDefault();\n    setNewQuestionCount(count => count + 1);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"A vizsga jellemz\\u0151i:\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"examName\",\n    value: examProps[0] || '',\n    placeholder: \"A vizsga neve\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"examNotes\",\n    value: examProps[1] || '',\n    placeholder: \"A vizsga megjegyz\\xE9se\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"examStatus\",\n    className: \"rounded pl-2 w-25\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    defaultValue: examProps[2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, examProps[2] ? 'Aktív' : 'Inaktív'), /*#__PURE__*/React.createElement(\"option\", {\n    value: !examProps[2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, !examProps[2] ? 'Aktív' : 'Inaktív')), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"examMinPoints\",\n    value: examProps[3] || '',\n    placeholder: \"A vizsga elv\\xE9gz\\xE9s\\xE9hez sz\\xFCks\\xE9ges pontsz\\xE1m\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    name: \"M\\xF3dos\\xEDt\\xE1s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"A vizsg\\xE1hoz tartoz\\xF3 k\\xE9rd\\xE9sek\"), questions.length === 0 ? warning : /*#__PURE__*/React.createElement(ListManager, {\n    list: questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 48\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: increateCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"K\\xE9rd\\xE9s hozz\\xE1ad\\xE1sa\"), /*#__PURE__*/React.createElement(AddQuestion, {\n    count: newQuestionCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"A vizsga t\\xF6rl\\xE9se\"));\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/modify/ExamModify.js"],"names":["React","useState","useEffect","useParams","ListManager","API","AddQuestion","ExamModify","examCode","warning","setWarning","examProps","setExamProps","questions","setQuestions","maxPoints","setMaxPoints","newQuestionCount","setNewQuestionCount","modifyResult","setModifyResult","get","examName","then","result","data","list","forEach","question","answers","answer","push","id","text","correct","points","name","notes","active","catch","err","console","log","handleSubmit","event","preventDefault","handleChange","target","props","splice","value","increateCount","count","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport ListManager from './ListManager'\r\n\r\nimport API from '../../BackendAPI'\r\nimport AddQuestion from './AddQuestion'\r\n\r\nexport default function ExamModify(){\r\n\r\n    const [examCode,] = useState(useParams())\r\n\r\n    const [warning, setWarning] = useState(null)\r\n    const [examProps, setExamProps] = useState([])\r\n    const [questions, setQuestions] = useState([])\r\n    const [maxPoints, setMaxPoints] = useState(0)\r\n    const [newQuestionCount, setNewQuestionCount] = useState(0)\r\n    const [modifyResult, setModifyResult] = useState(null)\r\n\r\n    useEffect(() => {\r\n        API.get(`/exams/${examCode.examName}`)\r\n            .then(result => {\r\n                if(result){\r\n                    if(result.data.questions){\r\n                        let list = []\r\n                        result.data.questions.forEach((question) => {\r\n                            let answers = []\r\n                            question.answers.forEach(answer => {\r\n                                answers.push([answer.id, answer.text, answer.correct])\r\n                            })\r\n                            setMaxPoints(points => points + question.points)\r\n                            list.push([question.id, question.name, question.points, answers])\r\n                        })\r\n                        setQuestions(list)\r\n                    }else{\r\n                        setQuestions([])\r\n                        setWarning('Nincsenek megjeleníthető kérdések.')\r\n                    }\r\n                    setExamProps([result.data.name, result.data.notes, result.data.active, result.data.points])\r\n                }\r\n            }).catch(err => console.log(err))\r\n    },[examCode.examName])\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault()\r\n        /*if(examName != null){\r\n            API.post(`/exams/modify/${examCode.examName}`, {examName: examName})\r\n            .then(response => {\r\n                if(response){\r\n                    setModifyResult(response.data.updated)\r\n                }\r\n            }).catch(err => console.log(err))\r\n        }*/\r\n    }\r\n\r\n    function handleChange(event){\r\n        switch(event.target.name){\r\n            case 'examName':\r\n                setExamProps(props => props.splice(0, 1, event.target.value))\r\n                break\r\n            case 'examNotes':\r\n                setExamProps(props => props[1] = event.target.value)\r\n                break\r\n            case 'examStatus':\r\n                setExamProps(props => props[2] = event.target.value)\r\n                break\r\n            case 'examMinPoints':\r\n                setExamProps(props => {\r\n                    if(event.target.value > maxPoints){\r\n                        props[3] = maxPoints\r\n                    }else if(event.target.value < 0){\r\n                        props[3] = 0\r\n                    }else{\r\n                        props[3] = event.target.value\r\n                    }\r\n                })\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    function increateCount(event){\r\n        event.preventDefault()\r\n        setNewQuestionCount(count => count+1)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container bg-light\">\r\n            <h3>A vizsga jellemzői:</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type='text' name='examName' \r\n                    value={examProps[0] || ''} placeholder='A vizsga neve' onChange={handleChange}\r\n                />\r\n                <input type='text' name='examNotes' \r\n                    value={examProps[1] || ''} placeholder='A vizsga megjegyzése' onChange={handleChange}\r\n                />\r\n                <select name='examStatus' className=\"rounded pl-2 w-25\" onChange={handleChange}>\r\n                    <option defaultValue={examProps[2]}>{examProps[2]? 'Aktív':'Inaktív'}</option>\r\n                    <option value={!examProps[2]}>{!examProps[2]? 'Aktív':'Inaktív'}</option>\r\n                </select>\r\n                <input type='number' name='examMinPoints' \r\n                    value={examProps[3] || ''} placeholder='A vizsga elvégzéséhez szükséges pontszám' onChange={handleChange}\r\n                />\r\n                <input type='submit' name='Módosítás' />\r\n            </form>\r\n\r\n            <h3>A vizsgához tartozó kérdések</h3>\r\n\r\n            {questions.length === 0 ? warning: <ListManager list={questions} />}\r\n\r\n            <button onClick={increateCount}>Kérdés hozzáadása</button>\r\n\r\n            <AddQuestion count={newQuestionCount} />\r\n\r\n            <button>A vizsga törlése</button>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}