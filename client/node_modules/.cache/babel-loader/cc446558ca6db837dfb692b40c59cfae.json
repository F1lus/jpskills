{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\examination\\\\RenderContent.js\";\nimport React, { useEffect, useState } from 'react';\nexport default function RenderContent(props) {\n  const list = props.list;\n  const [answers, setAnswers] = useState([]);\n\n  function createImage(picture) {\n    const arrayBufferView = new Uint8Array(picture);\n    const blob = new Blob([arrayBufferView], {\n      type: 'image/jpeg'\n    });\n    const urlCreator = window.URL || window.webkitURL;\n    return urlCreator.createObjectURL(blob);\n  }\n\n  function handleChange(event, aId) {\n    const answersCopy = answers.slice();\n\n    if (event.target.checked) {\n      const answerObj = {\n        id: aId,\n        value: event.target.checked ? 1 : 0\n      };\n      answersCopy.push(answerObj);\n    } else {\n      const index = answersCopy.findIndex(value => value.id === aId);\n      answersCopy.splice(index, 1);\n      console.log(index);\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(answers);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, list.map((question, qId) => {\n    return question.map((content, innerIndex) => {\n      if (innerIndex === 1) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: innerIndex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 40\n          }\n        }, qId + 1, \". \")), \" \", content, \" (\", question[2], \" pont)\");\n      } else if (innerIndex === 3 && content != null) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: innerIndex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"img-fluid\",\n          src: createImage(content),\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 37\n          }\n        }));\n      } else if (innerIndex === 4) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: innerIndex,\n          className: \"my-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }\n        }, content.map((text, index) => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"container\",\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"checkbox\",\n            name: index,\n            onChange: e => {\n              handleChange(e, text[0]);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 49\n            }\n          }), /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: index,\n            className: \"pl-1\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 49\n            }\n          }, \" \", text[1]));\n        }));\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Lead\\xE1s\"));\n}","map":{"version":3,"sources":["C:/Users/MÃ¡rk/Documents/GitHub/jpskills/client/src/components/exams/examination/RenderContent.js"],"names":["React","useEffect","useState","RenderContent","props","list","answers","setAnswers","createImage","picture","arrayBufferView","Uint8Array","blob","Blob","type","urlCreator","window","URL","webkitURL","createObjectURL","handleChange","event","aId","answersCopy","slice","target","checked","answerObj","id","value","push","index","findIndex","splice","console","log","handleSubmit","preventDefault","map","question","qId","content","innerIndex","text","e"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\n\r\nexport default function RenderContent(props){\r\n\r\n    const list = props.list\r\n\r\n    const [answers, setAnswers] = useState([])\r\n\r\n    function createImage(picture){\r\n        const arrayBufferView = new Uint8Array(picture)\r\n        const blob = new Blob([arrayBufferView], {type: 'image/jpeg'}) \r\n        const urlCreator = window.URL || window.webkitURL\r\n\r\n        return urlCreator.createObjectURL(blob)\r\n    }\r\n\r\n    function handleChange(event, aId){\r\n        const answersCopy = answers.slice()\r\n        if(event.target.checked){\r\n            const answerObj = {id: aId, value: event.target.checked ? 1 : 0}\r\n            answersCopy.push(answerObj)\r\n        }else{\r\n            const index = answersCopy.findIndex(value => value.id === aId)\r\n            answersCopy.splice(index, 1)\r\n            console.log(index)\r\n        }\r\n    }\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault()\r\n        console.log(answers)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {list.map((question, qId) => {\r\n                    return question.map((content, innerIndex) => {\r\n                        if(innerIndex === 1){\r\n                            return (\r\n                                <li key={innerIndex}>\r\n                                    <b><span>{qId+1}. </span></b> {content} ({question[2]} pont)\r\n                                </li>)\r\n                        }else if(innerIndex === 3 && content != null){\r\n                            return (\r\n                                <li key={innerIndex}>\r\n                                    <img className='img-fluid' src={createImage(content)} alt=''/>\r\n                                </li>\r\n                            )\r\n                        }else if(innerIndex === 4){\r\n                            return (\r\n                                <li key={innerIndex} className=\"my-3\">\r\n                                    {content.map((text, index) => {\r\n                                        return(\r\n                                            <div className=\"container\" key={index}>\r\n                                                <input type=\"checkbox\" name={index} onChange={e => {\r\n                                                    handleChange(e, text[0])\r\n                                                }}/>\r\n                                                <label htmlFor={index} className=\"pl-1\"> {text[1]}</label>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </li>\r\n                            )\r\n                        }\r\n                    })\r\n                })}\r\n            </ul>\r\n            <button onClick={handleSubmit}>LeadÃ¡s</button>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}