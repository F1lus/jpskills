{"ast":null,"code":"export default (rawQuestions => {\n  let list = [];\n  let examPoints = 0;\n\n  if (rawQuestions || rawQuestions.length > 0) {\n    rawQuestions.forEach(question => {\n      let answers = [];\n\n      if (question.answers) {\n        question.answers.forEach(answer => {\n          answers.push([answer.id, answer.text, answer.correct]);\n        });\n        answers.sort((a, b) => a[0] - b[0]);\n      }\n\n      examPoints += question.points;\n      list.push([question.id, question.name, question.points, question.pic, answers]);\n    });\n    list.sort((a, b) => a[0] - b[0]);\n  }\n\n  return {\n    questions: list,\n    points: examPoints\n  };\n});","map":{"version":3,"sources":["C:/Users/MÃ¡rk/Documents/GitHub/jpskills/client/src/components/exams/models/QuestionsModel.js"],"names":["rawQuestions","list","examPoints","length","forEach","question","answers","answer","push","id","text","correct","sort","a","b","points","name","pic","questions"],"mappings":"AAAA,gBAAgBA,YAAD,IAAkB;AAC7B,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,UAAU,GAAG,CAAjB;;AAEA,MAAGF,YAAY,IAAIA,YAAY,CAACG,MAAb,GAAsB,CAAzC,EAA2C;AACvCH,IAAAA,YAAY,CAACI,OAAb,CAAsBC,QAAD,IAAc;AAC/B,UAAIC,OAAO,GAAG,EAAd;;AACA,UAAGD,QAAQ,CAACC,OAAZ,EAAoB;AAChBD,QAAAA,QAAQ,CAACC,OAAT,CAAiBF,OAAjB,CAAyBG,MAAM,IAAI;AAC/BD,UAAAA,OAAO,CAACE,IAAR,CAAa,CAACD,MAAM,CAACE,EAAR,EAAYF,MAAM,CAACG,IAAnB,EAAyBH,MAAM,CAACI,OAAhC,CAAb;AACH,SAFD;AAGAL,QAAAA,OAAO,CAACM,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAA/B;AACH;;AACDZ,MAAAA,UAAU,IAAIG,QAAQ,CAACU,MAAvB;AAEAd,MAAAA,IAAI,CAACO,IAAL,CAAU,CAACH,QAAQ,CAACI,EAAV,EAAcJ,QAAQ,CAACW,IAAvB,EAA6BX,QAAQ,CAACU,MAAtC,EAA8CV,QAAQ,CAACY,GAAvD,EAA4DX,OAA5D,CAAV;AACH,KAXD;AAaAL,IAAAA,IAAI,CAACW,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAA5B;AACH;;AAED,SAAO;AACHI,IAAAA,SAAS,EAAEjB,IADR;AAEHc,IAAAA,MAAM,EAAEb;AAFL,GAAP;AAIH,CAzBD","sourcesContent":["export default (rawQuestions) => {\r\n    let list = []\r\n    let examPoints = 0\r\n    \r\n    if(rawQuestions || rawQuestions.length > 0){\r\n        rawQuestions.forEach((question) => {\r\n            let answers = []\r\n            if(question.answers){\r\n                question.answers.forEach(answer => {\r\n                    answers.push([answer.id, answer.text, answer.correct])\r\n                })\r\n                answers.sort((a, b) => a[0] - b[0])\r\n            }\r\n            examPoints += question.points\r\n\r\n            list.push([question.id, question.name, question.points, question.pic, answers])\r\n        })\r\n\r\n        list.sort((a, b) => a[0] - b[0])\r\n    }\r\n\r\n    return {\r\n        questions: list,\r\n        points: examPoints\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}