{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\modify\\\\ExamModify.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ListManager from './ListManager';\nimport API from '../../BackendAPI';\nimport AddQuestion from './AddQuestion';\nexport default function ExamModify() {\n  const [examCode] = useState(useParams());\n  const [warning, setWarning] = useState(null);\n  const [examName, setExamName] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [newQuestionCount, setNewQuestionCount] = useState(0);\n  const [modifyResult, setModifyResult] = useState(null);\n  useEffect(() => {\n    API.get(`/exams/${examCode.examName}`).then(result => {\n      if (result) {\n        if (result.data.questions) {\n          let list = [];\n          result.data.questions.forEach(question => {\n            let answers = [];\n            question.answers.forEach(answer => {\n              answers.push([answer.id, answer.text, answer.correct]);\n            });\n            list.push([question.id, question.name, question.points, answers]);\n          });\n          setExamName(result.data.name);\n          setQuestions(list);\n        } else {\n          setExamName(result.data.name);\n          setQuestions([]);\n          setWarning('Nincsenek megjeleníthető kérdések.');\n        }\n      }\n    }).catch(err => console.log(err));\n  }, [examCode.examName, modifyResult]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (examName != null) {\n      API.post(`/exams/modify/${examCode.examName}`, {\n        examName: examName\n      }).then(response => {\n        if (response) {\n          console.log(response.data.updated);\n          setModifyResult(response.data.updated);\n        }\n      });\n    }\n  }\n\n  function increateCount(event) {\n    event.preventDefault();\n    setNewQuestionCount(count => count + 1);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"A vizsga megnevez\\xE9se:\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"examName\",\n    value: examName || '',\n    placeholder: \"A vizsga neve\",\n    onChange: e => setExamName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    name: \"M\\xF3dos\\xEDt\\xE1s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"A vizsg\\xE1hoz tartoz\\xF3 k\\xE9rd\\xE9sek\"), questions.length === 0 ? warning : /*#__PURE__*/React.createElement(ListManager, {\n    list: questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 48\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: increateCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"K\\xE9rd\\xE9s hozz\\xE1ad\\xE1sa\"), /*#__PURE__*/React.createElement(AddQuestion, {\n    count: newQuestionCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"A vizsga t\\xF6rl\\xE9se\"));\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/modify/ExamModify.js"],"names":["React","useState","useEffect","useParams","ListManager","API","AddQuestion","ExamModify","examCode","warning","setWarning","examName","setExamName","questions","setQuestions","newQuestionCount","setNewQuestionCount","modifyResult","setModifyResult","get","then","result","data","list","forEach","question","answers","answer","push","id","text","correct","name","points","catch","err","console","log","handleSubmit","event","preventDefault","post","response","updated","increateCount","count","e","target","value","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport ListManager from './ListManager'\r\n\r\nimport API from '../../BackendAPI'\r\nimport AddQuestion from './AddQuestion'\r\n\r\nexport default function ExamModify(){\r\n\r\n    const [examCode,] = useState(useParams())\r\n\r\n    const [warning, setWarning] = useState(null)\r\n    const [examName, setExamName] = useState(null)\r\n    const [questions, setQuestions] = useState([])\r\n    const [newQuestionCount, setNewQuestionCount] = useState(0)\r\n    const [modifyResult, setModifyResult] = useState(null)\r\n\r\n    useEffect(() => {\r\n        API.get(`/exams/${examCode.examName}`)\r\n            .then(result => {\r\n                if(result){\r\n                    if(result.data.questions){\r\n                        let list = []\r\n                        result.data.questions.forEach((question) => {\r\n                            let answers = []\r\n                            question.answers.forEach(answer => {\r\n                                answers.push([answer.id, answer.text, answer.correct])\r\n                            })\r\n                            list.push([question.id, question.name, question.points, answers])\r\n                        })\r\n                        setExamName(result.data.name)\r\n                        setQuestions(list)\r\n                    }else{\r\n                        setExamName(result.data.name)\r\n                        setQuestions([])\r\n                        setWarning('Nincsenek megjeleníthető kérdések.')\r\n                    }\r\n                }\r\n            }).catch(err => console.log(err))\r\n    },[examCode.examName, modifyResult])\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault()\r\n        if(examName != null){\r\n            API.post(`/exams/modify/${examCode.examName}`, {examName: examName})\r\n            .then(response => {\r\n                if(response){\r\n                    console.log(response.data.updated)\r\n                    setModifyResult(response.data.updated)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function increateCount(event){\r\n        event.preventDefault()\r\n        setNewQuestionCount(count => count+1)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container bg-light\">\r\n            <h3>A vizsga megnevezése:</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type='text' name='examName' \r\n                    value={examName || ''} placeholder='A vizsga neve'\r\n                    onChange={e => setExamName(e.target.value)}\r\n                />\r\n                <input type='submit' name='Módosítás' />\r\n            </form>\r\n\r\n            <h3>A vizsgához tartozó kérdések</h3>\r\n\r\n            {questions.length === 0 ? warning: <ListManager list={questions} />}\r\n\r\n            <button onClick={increateCount}>Kérdés hozzáadása</button>\r\n\r\n            <AddQuestion count={newQuestionCount} />\r\n\r\n            <button>A vizsga törlése</button>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}