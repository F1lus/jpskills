{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\modify\\\\AddAnswer.js\";\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from '../../BackendAPI';\nexport default function AddAnswer(props) {\n  const [param] = useState(useParams());\n  const [answer, setAnswer] = useState(null);\n  const [isCorrect, setCorrect] = useState(1);\n\n  function handleChange(event) {\n    switch (event.target.name) {\n      case 'answer':\n        setAnswer(event.target.value);\n        break;\n\n      case 'value':\n        setCorrect(event.target.value);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (props.questionId && answer && isCorrect) {\n      API.post(`/exams/modify/${param.examName}`, {\n        questionId: props.questionId,\n        answerText: answer,\n        value: isCorrect\n      }).then(result => {\n        if (result) {\n          props.socket.emit('exam-modified');\n          setAnswer(null);\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, props.display ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group text-center m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"answer\",\n    value: answer || '',\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"answer\",\n    className: \"label-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, \"A v\\xE1lasz sz\\xF6vege\"))), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"value\",\n    className: \"rounded pl-2 w-25\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, \"Helyes\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Helytelen\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Hozz\\xE1ad\\xE1s\")) : null);\n}","map":{"version":3,"sources":["C:/Users/Márk/Documents/GitHub/jpskills/client/src/components/exams/modify/AddAnswer.js"],"names":["React","useState","useParams","API","AddAnswer","props","param","answer","setAnswer","isCorrect","setCorrect","handleChange","event","target","name","value","handleSubmit","preventDefault","questionId","post","examName","answerText","then","result","socket","emit","display"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAEpC,QAAM,CAACC,KAAD,IAAWL,QAAQ,CAACC,SAAS,EAAV,CAAzB;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACQ,SAAD,EAAYC,UAAZ,IAA0BT,QAAQ,CAAC,CAAD,CAAxC;;AAEA,WAASU,YAAT,CAAsBC,KAAtB,EAA4B;AACxB,YAAOA,KAAK,CAACC,MAAN,CAAaC,IAApB;AACI,WAAK,QAAL;AACIN,QAAAA,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaE,KAAd,CAAT;AACA;;AACJ,WAAK,OAAL;AACIL,QAAAA,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaE,KAAd,CAAV;AACA;;AACJ;AACI;AARR;AAUH;;AAED,WAASC,YAAT,CAAsBJ,KAAtB,EAA4B;AACxBA,IAAAA,KAAK,CAACK,cAAN;;AACA,QAAGZ,KAAK,CAACa,UAAN,IAAoBX,MAApB,IAA8BE,SAAjC,EAA2C;AACvCN,MAAAA,GAAG,CAACgB,IAAJ,CAAU,iBAAgBb,KAAK,CAACc,QAAS,EAAzC,EACI;AAACF,QAAAA,UAAU,EAAEb,KAAK,CAACa,UAAnB;AAA+BG,QAAAA,UAAU,EAAEd,MAA3C;AAAmDQ,QAAAA,KAAK,EAAEN;AAA1D,OADJ,EAECa,IAFD,CAEMC,MAAM,IAAI;AACZ,YAAGA,MAAH,EAAU;AACNlB,UAAAA,KAAK,CAACmB,MAAN,CAAaC,IAAb,CAAkB,eAAlB;AACAjB,UAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,OAPD;AAQH;AACJ;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACqB,OAAN,gBACG;AAAM,IAAA,QAAQ,EAAEV,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,KAAK,EAAET,MAAM,IAAI,EAAlD;AAAsD,IAAA,QAAQ,EAAEI,YAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CAFJ,CADJ,eAUI;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,SAAS,EAAC,mBAA/B;AAAmD,IAAA,QAAQ,EAAEA,YAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CAVJ,eAeI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAfJ,CADH,GAkBK,IAnBV,CADJ;AAwBH","sourcesContent":["import React, {useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport API from '../../BackendAPI'\r\n\r\nexport default function AddAnswer(props){\r\n\r\n    const [param,] = useState(useParams())\r\n    const [answer, setAnswer] = useState(null)\r\n    const [isCorrect, setCorrect] = useState(1)\r\n\r\n    function handleChange(event){\r\n        switch(event.target.name){\r\n            case 'answer':\r\n                setAnswer(event.target.value)\r\n                break\r\n            case 'value':\r\n                setCorrect(event.target.value)\r\n                break\r\n            default:\r\n                return\r\n        }\r\n    }\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault()\r\n        if(props.questionId && answer && isCorrect){\r\n            API.post(`/exams/modify/${param.examName}`, \r\n                {questionId: props.questionId, answerText: answer, value: isCorrect})\r\n            .then(result => {\r\n                if(result){\r\n                    props.socket.emit('exam-modified')\r\n                    setAnswer(null)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           { props.display ? \r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group text-center m-auto\">\r\n                        <input type='text' name='answer' value={answer || ''} onChange={handleChange}/>\r\n                        <label htmlFor=\"answer\" className=\"label-name\">\r\n                            <span className=\"content-name\">\r\n                                A válasz szövege\r\n                            </span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <select name='value' className=\"rounded pl-2 w-25\" onChange={handleChange}>\r\n                        <option value={1}>Helyes</option>\r\n                        <option value={0}>Helytelen</option>\r\n                    </select>\r\n\r\n                    <button className=\"btn btn-warning\">Hozzáadás</button>\r\n                </form> \r\n                : null\r\n            } \r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}