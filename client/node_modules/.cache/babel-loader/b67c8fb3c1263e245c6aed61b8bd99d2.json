{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\examination\\\\RenderContent.js\";\nimport React, { useEffect, useState } from 'react';\nexport default function RenderContent(props) {\n  const questionId = props.questionId;\n  const list = props.list;\n  const isAnswer = props.isAnswer;\n  const [answers, setAnswers] = useState([]);\n\n  function createImage(picture) {\n    const arrayBufferView = new Uint8Array(picture);\n    const blob = new Blob([arrayBufferView], {\n      type: 'image/jpeg'\n    });\n    const urlCreator = window.URL || window.webkitURL;\n    return urlCreator.createObjectURL(blob);\n  }\n\n  function handleChange(event) {\n    console.log(event.target.checked);\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, list.map((question, index) => {\n    return question.map((content, innerIndex) => {\n      if (innerIndex === 1) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: innerIndex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 32\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 56\n          }\n        }, index + 1, \". \")), \" \", content, \" (\", question[2], \" pont)\");\n      } else if (innerIndex === 3 && content != null) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: innerIndex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"img-fluid\",\n          src: createImage(content),\n          alt: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }\n        }));\n      } else if (innerIndex === 4) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: innerIndex,\n          className: \"my-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }\n        }, content.map((text, index) => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"container\",\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"checkbox\",\n            name: index,\n            onChange: handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 45\n            }\n          }), /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: index,\n            className: \"pl-1\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 45\n            }\n          }, \" \", text[1]));\n        }));\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["C:/Users/MÃ¡rk/Documents/GitHub/jpskills/client/src/components/exams/examination/RenderContent.js"],"names":["React","useEffect","useState","RenderContent","props","questionId","list","isAnswer","answers","setAnswers","createImage","picture","arrayBufferView","Uint8Array","blob","Blob","type","urlCreator","window","URL","webkitURL","createObjectURL","handleChange","event","console","log","target","checked","map","question","index","content","innerIndex","text"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAExC,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;AACA,QAAMC,IAAI,GAAGF,KAAK,CAACE,IAAnB;AACA,QAAMC,QAAQ,GAAGH,KAAK,CAACG,QAAvB;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,WAASQ,WAAT,CAAqBC,OAArB,EAA6B;AACzB,UAAMC,eAAe,GAAG,IAAIC,UAAJ,CAAeF,OAAf,CAAxB;AACA,UAAMG,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACH,eAAD,CAAT,EAA4B;AAACI,MAAAA,IAAI,EAAE;AAAP,KAA5B,CAAb;AACA,UAAMC,UAAU,GAAGC,MAAM,CAACC,GAAP,IAAcD,MAAM,CAACE,SAAxC;AAEA,WAAOH,UAAU,CAACI,eAAX,CAA2BP,IAA3B,CAAP;AACH;;AAED,WAASQ,YAAT,CAAsBC,KAAtB,EAA4B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,OAAzB;AACH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrB,IAAI,CAACsB,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC3B,WAAOD,QAAQ,CAACD,GAAT,CAAa,CAACG,OAAD,EAAUC,UAAV,KAAyB;AACzC,UAAGA,UAAU,KAAK,CAAlB,EAAoB;AAChB,4BAAO;AAAI,UAAA,GAAG,EAAEA,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOF,KAAK,GAAC,CAAb,OAAH,CAArB,OAAsDC,OAAtD,QAAiEF,QAAQ,CAAC,CAAD,CAAzE,WAAP;AACH,OAFD,MAEM,IAAGG,UAAU,KAAK,CAAf,IAAoBD,OAAO,IAAI,IAAlC,EAAuC;AACzC,4BACI;AAAI,UAAA,GAAG,EAAEC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,GAAG,EAAEtB,WAAW,CAACqB,OAAD,CAA3C;AAAsD,UAAA,GAAG,EAAC,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKH,OANK,MAMA,IAAGC,UAAU,KAAK,CAAlB,EAAoB;AACtB,4BACI;AAAI,UAAA,GAAG,EAAEA,UAAT;AAAqB,UAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,OAAO,CAACH,GAAR,CAAY,CAACK,IAAD,EAAOH,KAAP,KAAiB;AAC1B,8BACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAA2B,YAAA,GAAG,EAAEA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,IAAI,EAAEA,KAA7B;AAAoC,YAAA,QAAQ,EAAER,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,YAAA,OAAO,EAAEQ,KAAhB;AAAuB,YAAA,SAAS,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0CG,IAAI,CAAC,CAAD,CAA9C,CAFJ,CADJ;AAMH,SAPA,CADL,CADJ;AAYH;AACJ,KAvBM,CAAP;AAwBH,GAzBA,CADL,CADJ;AA8BH","sourcesContent":["import React, {useEffect, useState} from 'react'\r\n\r\nexport default function RenderContent(props){\r\n\r\n    const questionId = props.questionId\r\n    const list = props.list\r\n    const isAnswer = props.isAnswer\r\n\r\n    const [answers, setAnswers] = useState([])\r\n\r\n    function createImage(picture){\r\n        const arrayBufferView = new Uint8Array(picture)\r\n        const blob = new Blob([arrayBufferView], {type: 'image/jpeg'}) \r\n        const urlCreator = window.URL || window.webkitURL\r\n\r\n        return urlCreator.createObjectURL(blob)\r\n    }\r\n\r\n    function handleChange(event){\r\n        console.log(event.target.checked)\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            {list.map((question, index) => {\r\n                return question.map((content, innerIndex) => {\r\n                    if(innerIndex === 1){\r\n                        return <li key={innerIndex}><b><span>{index+1}. </span></b> {content} ({question[2]} pont)</li>\r\n                    }else if(innerIndex === 3 && content != null){\r\n                        return (\r\n                            <li key={innerIndex}>\r\n                                <img className='img-fluid' src={createImage(content)} alt=''/>\r\n                            </li>\r\n                        )\r\n                    }else if(innerIndex === 4){\r\n                        return (\r\n                            <li key={innerIndex} className=\"my-3\">\r\n                                {content.map((text, index) => {\r\n                                    return(\r\n                                        <div className=\"container\" key={index}>\r\n                                            <input type=\"checkbox\" name={index} onChange={handleChange}/>\r\n                                            <label htmlFor={index} className=\"pl-1\"> {text[1]}</label>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </li>\r\n                        )\r\n                    }\r\n                })\r\n            })}\r\n        </ul>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}