{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M\\xE1rk\\\\Documents\\\\GitHub\\\\jpskills\\\\client\\\\src\\\\components\\\\exams\\\\learn\\\\ExamDocument.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport API from '../../BackendAPI';\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\nexport default function ExamDocument() {\n  const [examDoc, setExamDoc] = useState('/');\n  const [exam] = useState(useParams());\n  const [pageNum, setPageNum] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n  function onDocumentLoadSuccess({\n    pageCount\n  }) {\n    setPageNum(pageCount);\n    console.log(pageCount);\n  }\n\n  function nextPage(event) {\n    event.preventDefault();\n    setCurrentPage(page => page + 1);\n    console.log(pageNum);\n  }\n\n  useEffect(() => {\n    API.get(`/exams/learn/${exam.examCode}`).then(result => {\n      setExamDoc(result.data.document.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [pageNum]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Document, {\n    file: {\n      data: examDoc\n    },\n    onLoadSuccess: page => console.log(page),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Page, {\n    pageNumber: currentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Page \", currentPage, \" of \", pageNum), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: nextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Next\"));\n}","map":{"version":3,"sources":["C:/Users/MÃ¡rk/Documents/GitHub/jpskills/client/src/components/exams/learn/ExamDocument.js"],"names":["React","useState","useEffect","useParams","Document","Page","pdfjs","API","ExamDocument","examDoc","setExamDoc","exam","pageNum","setPageNum","currentPage","setCurrentPage","GlobalWorkerOptions","workerSrc","version","onDocumentLoadSuccess","pageCount","console","log","nextPage","event","preventDefault","page","get","examCode","then","result","data","document","catch","err"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,SAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,KAAxB,QAAoC,WAApC;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,OAAO,6CAAP;AAEA,eAAe,SAASC,YAAT,GAAuB;AAElC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,GAAD,CAAtC;AACA,QAAM,CAACU,IAAD,IAAUV,QAAQ,CAACE,SAAS,EAAV,CAAxB;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,CAAD,CAA9C;AAEAK,EAAAA,KAAK,CAACU,mBAAN,CAA0BC,SAA1B,GAAuC,2CAA0CX,KAAK,CAACY,OAAQ,gBAA/F;;AAEA,WAASC,qBAAT,CAA+B;AAACC,IAAAA;AAAD,GAA/B,EAA4C;AACxCP,IAAAA,UAAU,CAACO,SAAD,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACH;;AAED,WAASG,QAAT,CAAkBC,KAAlB,EAAwB;AACpBA,IAAAA,KAAK,CAACC,cAAN;AACAV,IAAAA,cAAc,CAACW,IAAI,IAAIA,IAAI,GAAC,CAAd,CAAd;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACH;;AAEDV,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,GAAG,CAACoB,GAAJ,CAAS,gBAAehB,IAAI,CAACiB,QAAS,EAAtC,EACCC,IADD,CACMC,MAAM,IAAI;AACZpB,MAAAA,UAAU,CAACoB,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBD,IAAtB,CAAV;AACH,KAHD,EAGGE,KAHH,CAGSC,GAAG,IAAI;AACZb,MAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACH,KALD;AAMH,GAPQ,EAOP,CAACtB,OAAD,CAPO,CAAT;AASA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE;AAACmB,MAAAA,IAAI,EAAEtB;AAAP,KADR;AAEE,IAAA,aAAa,EAAEiB,IAAI,IAAIL,OAAO,CAACC,GAAR,CAAYI,IAAZ,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAEZ,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAASA,WAAT,UAA0BF,OAA1B,CAPF,eAQE;AAAQ,IAAA,OAAO,EAAEW,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CADJ;AAYH","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport {Document, Page, pdfjs} from 'react-pdf'\r\n\r\nimport API from '../../BackendAPI'\r\n\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\n\r\nexport default function ExamDocument(){\r\n\r\n    const [examDoc, setExamDoc] = useState('/')\r\n    const [exam,] = useState(useParams())\r\n    const [pageNum, setPageNum] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`\r\n\r\n    function onDocumentLoadSuccess({pageCount}) {\r\n        setPageNum(pageCount)\r\n        console.log(pageCount)\r\n    }\r\n\r\n    function nextPage(event){\r\n        event.preventDefault()\r\n        setCurrentPage(page => page+1)\r\n        console.log(pageNum)\r\n    }\r\n\r\n    useEffect(() => {\r\n        API.get(`/exams/learn/${exam.examCode}`)\r\n        .then(result => {\r\n            setExamDoc(result.data.document.data)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    },[pageNum])\r\n\r\n    return (\r\n        <div>\r\n          <Document\r\n            file={{data: examDoc}}\r\n            onLoadSuccess={page => console.log(page)}\r\n          >\r\n            <Page pageNumber={currentPage} />\r\n          </Document>\r\n          <p>Page {currentPage} of {pageNum}</p>\r\n          <button onClick={nextPage}>Next</button>\r\n        </div>\r\n      );\r\n}"]},"metadata":{},"sourceType":"module"}